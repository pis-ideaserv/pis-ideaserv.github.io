{"version":3,"sources":["Services/WithRouterInnerRef.tsx","Services/ServerUrl.ts","Services/Requests/StaticMethods.ts","Redux/Actions/Types.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Redux/Actions/MasterCodes.ts","Redux/Actions/status.ts","Redux/Actions/Notifications.ts","Redux/Actions/Logs.ts","Services/Requests/Auth.tsx","Services/Token.ts","Services/Requests/User.tsx","Services/Requests/Products.tsx","Services/Requests/Suppliers.tsx","Services/Requests/MasterCodes.tsx","Services/Requests/Category.tsx","Services/Requests/Logs.tsx","Services/Requests/Status.tsx","Services/Requests/Notification.tsx","Components/Login/index.tsx","Components/Main/Home/Admin.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Redux/Actions/UserAccount.ts","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Notification/Log.tsx","Components/Notification/index.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Summary/Category.tsx","Components/Main/Summary/Add.tsx","Components/Main/Products/Add.tsx","Components/Main/Products/Show.tsx","Components/Main/Products/Edit.tsx","Components/Main/Products/TableOrder.tsx","Components/Upload/index.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/Add.tsx","Components/Main/Suppliers/Edit.tsx","Components/Main/Suppliers/Show.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/Show.tsx","Components/Main/Users/Edit.tsx","Components/Main/Users/Add.tsx","Components/Main/Users/index.tsx","Components/NotFound/index.tsx","Components/Main/Summary/Edit.tsx","Components/Main/Summary/index.tsx","Components/Sync/index.tsx","Middleware/ComponentMiddleware.tsx","Middleware/LoginMiddleware.tsx","Routes/Navigation.ts","Routes/Error.tsx","Services/Caller.tsx","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/MasterCodes.ts","Redux/Reducers/Category.ts","Redux/Reducers/status.ts","Redux/Reducers/Notifications.ts","Redux/Reducers/Logs.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["withRouterInnRef","WrappedComponent","ComponentWithRef","withRouter","props","forwardRef","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","ref","React","prefix","Url","login","logout","refresh","me","user","products","suppliers","productMasterList","category","logs","status","notification","file","server_url","filelog","request","_ref","asyncToGenerator","regenerator_default","mark","_callee2","data","config","format","wrap","_context2","prev","next","network_error","undefined","headers","Content-Type","Accept","Authorization","Token","get","axios","then","response","catch","_ref2","_callee","error","_context","handleError","sent","stop","_x2","apply","this","arguments","abrupt","_x","retry","_ref3","_callee3","ret","_context3","success","_x3","_ref4","_callee4","_context4","method","url","_ref5","_callee5","tok","b","_context5","t0","exist","token","save","_x4","_x5","Products","Suppliers","Users","MasterCodes","Search","Notifications","Logs","NavigationTitle","dispatch","type","payload","getState","tempProduct","params","pr","ProductsParams","tempSupplier","sp","SuppliersParams","tempData","UsersParams","Actions_Search","sr","Filter","filter","component","extra_params","keys","forEach","key","JSON","stringify","per_page","page","us","_x6","ma","_x7","_x8","_x9","_x10","tempMasterCode","MC","MasterCodeParams","loggedIn","stat","param","tempActivities","act","LogsParams","log","withRouterInnerRef","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","useDispatch","action","Button","variant","color","onClick","Close","useImperativeHandle","_login","credential","username","password","dangerouslySetInnerHTML","__html","autoHideDuration","anchorOrigin","vertical","horizontal","_me","history","push","errorAction","Date","setDate","getDate","Cookies","set","expires","remove","update","processData","show","_show","_get","id","_update","add","_add","search","_search2","_filter2","_callee6","_context6","URLSearchParams","toString","product","supplier","up","pml","useRef","_React$useState","useState","_React$useState2","slicedToArray","submit","setSubmit","_React$useState3","_React$useState4","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","target","name","value","submitForm","preventDefault","current","location","state","className","Requests_namespaceObject","Auth","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","disabled","onChange","required","helperText","CircularProgress","logsRequest","statusRequest","users","useSelector","graph","open","setOpen","modal","setModal","setTarget","initModal","Status","Fragment","Dialog","onClose","aria-labelledby","disablePortal","DialogTitle","DialogContent","Table","size","TableBody","TableRow","TableCell","scope","supplier_code","product_code","product_name","serial_number","moment","delivery_date","warranty","warranty_start","warranty_end","reference_delivery_document","remarks","supplier_name","tin","address","contact_person","contact_number","email","first_name","last_name","company","level","parseInt","activated","ProductMasterList","DialogActions","dataModal","style","marginTop","Paper","index_es","total","ArrowForward","index_esm","width","height","chartType","loader","New","Replaced","Returned","Repaired","options","title","is3D","rootProps","data-testid","whiteSpace","Typography","padding","fontWeight","textTransform","overflow","TableHead","slice","map","hover","updated_at","previous","tableCell","align","Skeleton","i","skeletonTable","UserAccount","useEffect","control","Home_Admin","Topbar","userRequest","initUsersError","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","actions","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","User","fullWidth","maxWidth","textAlign","display","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","sidebar","toggleSidebar","swipeDrawer","noWrap","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","esm_Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","menu_title","styles","hidden","visibility","inherited","shadowed","boxShadow","icon","backgroundColor","borderRadius","makeStyles","theme","createStyles","root","list","&:hover","popperOpen","setPopperOpen","popperAnchor","setPopperAnchor","popperTitle","setPopperTitle","popperActive","setPoppperActive","sidebar_properties","_React$useState9","_React$useState10","popper","currentTarget","Popper","placement","transition","zIndex","TransitionProps","Fade","timeout","List","paddingTop","text","index","ListItem","onMouseEnter","onMouseLeave","button","setSidebarProps","sidebarProps","pathname","ListItemIcon","ListItemText","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","disablePadding","ArrowRightAlt","Log","setData","setParams","call","filename","aria-describedby","TablePagination","rowsPerPageOptions","count","meta","rowsPerPage","current_page","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","pams","autoFocus","Notification","setLog","Notification_Log","Fab","right","Cached","onDoubleClick","setErrorMessage","Chip","result","hasOwnProperty","created_at","Home","Dropbox","ProgressWrench","VanUtility","Account","Assessment","setSidebar","swipe","setSwipe","window","innerWidth","setWidth","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","addEventListener","updateBrowserWidth","sidebars","removeEventListener","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","navigate","Navigation_SidebarDesktop","Components_Notification","Backdrop","reset","product_description","created_by","_useState","_useState2","setPopper","controller","Filter_objectSpread","setText","setFilterControl","submitFilter","onKey","e","length","blur","table","onFocus","onKeyDown","inputRef","FormControl","Select","MenuItem","selected","serial","DatePicker","allowKeyboardControl","animateYearScrolling","inputVariant","select","Category","categoryRequest","setMessage","setCategory","Close_default","handleClose","disableBackdropClick","InputLabelProps","shrink","defaultValue","useStyles","container","flexWrap","textField","marginRight","marginBottom","dense","spacing","menu","dialog","background","left","addCategory","transform","outline","&:focus","categoryError","fontSize","Add","masterCodeRequest","initError","classes","setOption","input","setInput","categoryHandle","setCategoryHandler","_React$useState13","_React$useState14","categoryValue","setCategoryValue","handleChangeText","Add_objectSpread","loadOption","inputValue","console","updateErrorState","errors","holder","Summary_Category","paperScrollPaper","dist_react_select_browser_esm","cacheOptions","defaultOptions","loadOptions","onCreateOption","isDisabled","classNamePrefix","maxMenuHeight","productCodeRequest","supplierRequest","openAddProduct","setOpenAddProduct","modalAdd","inputAsync","model","handleProductAdd","Summary_Add","setModalAdd","async_dist_react_select_browser_esm","productInput","react_select_browser_esm","Today","Show","modalShow","setModalShow","initModalEdit","Edit","preProduct","setPreProduct","preSupplier","setPreSupplier","loadPreValues","find","element","TableOrder","handleToggle","TableOrder_objectSpread","anchor","transformOrigin","primary","ListItemSecondaryAction","inputProps","newFileName","Upload","notify","dragDiv","uploading","percent","setStatus","dragAndDrop","processFileList","files","classList","dataTransfer","extension","split","pop","generateRandomFileName","Upload_objectSpread","uploadToServer","tus","endpoint","retryDelays","resume","chunkSize","metadata","filetype","onError","onProgress","bytesUploaded","bytesTotal","toFixed","onSuccess","start","lastIndexOf","Math","random","substring","LinearProgress","onDragEnter","onDragLeave","onDragOver","onDrop","click","accept","productsRequest","initErrroMessage","initProductInput","setProduct","upload","setUpload","productCodeParam","_React$useState15","_React$useState16","tableAnchor","setTableAnchor","_React$useState17","_React$useState18","tableOpen","setTableOpen","_React$useState19","_React$useState20","setProductInput","_React$useState21","_React$useState22","supplierState","scroll","scrollY","selector","getElementsByClassName","changeAll","top","togglePointerEvents","Products_objectSpread","productRedux","Products_TableOrder","Products_Edit","Products_Add","Products_Show","Components_Upload","FilterList","ViewColumn","asc","Products_Filter","counter","today","initModalAdd","CloudUpload","colSpan","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","Reports","Filterer","paran","Settings","Suppliers_Filter_objectSpread","supplierInput","initSupplierError","initSupplier","setSupplier","setSupplierInput","Suppliers_objectSpread","supplierAction","Suppliers_Show","Suppliers_Edit","Suppliers_Add","Suppliers_Filter","Users_Filter_objectSpread","initUsers","setUsers","usersState","Users_objectSpread","Users_Show","Users_Edit","Users_Add","Users_Filter","initModalShow","NotFound","href","masterCodesRequest","categoryPreValue","setCategoryPreValue","Edit_objectSpread","Summary","masterCode","openEdit","setOpenEdit","handleAdd","Summary_Edit","Sync","Grid","alignItems","justify","minHeight","item","xs","ComponentMiddleware","check","caller","Components_Sync","react_router","to","from","Components_Login","Navigation","path","Component","middleware","exact","LoginMiddleware","Error","Caller","ids","setIds","PType","SType","UType","masterCodes","MCType","LType","NType","actionCaller","setInterval","clearInterval","Navigations","Services_Caller","react_router_dom","Main_Navigation","render","Routes_Error","initialState","NavigationTitle_objectSpread","Reducers_Products_objectSpread","Reducers_Suppliers_objectSpread","Reducers_Users_objectSpread","Search_objectSpread","MasterCodes_objectSpread","status_objectSpread","AC","Notifications_objectSpread","Logs_objectSpread","appReducer","combineReducers","rootReducer","thunk","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","applyMiddleware","App","es","build","maxSnack","useUtils_cfb96ac9","Routes","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","onUpdate","ReactDOM","src_App_0","getElementById","URL","process","origin","concat","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.328eca59.chunk.js","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\n\n\nconst withRouterInnRef = (WrappedComponent:any) => {\n\n    const InnerComponentWithRef = (props:any) => {\n        const {forwardRef, ...rest} = props;\n        return <WrappedComponent {...rest} ref={forwardRef} />;\n    }\n\n    const ComponentWithRef = withRouter(InnerComponentWithRef);\n\n    return React.forwardRef((props:any,ref:any)=>{\n        return <ComponentWithRef {...props} forwardRef={ref} />;\n    })\n\n}\n\nexport default withRouterInnRef;","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n    master      : 'product-master-list/',\n    category    : 'category/',\n    logs        : 'logs/',\n    status      : 'status/',\n    notification: 'notification/',\n}\n\nconst Url = {\n    login               :   server_url+prefix.auth+'login',\n    logout              :   server_url+prefix.auth+'logout',\n    refresh             :   server_url+prefix.auth+'refresh',\n    me                  :   server_url+prefix.auth+'me',\n    user                :   server_url+prefix.user,\n    products            :   server_url+prefix.products,\n    suppliers           :   server_url+prefix.supplier,\n    productMasterList   :   server_url+prefix.master,\n    category            :   server_url+prefix.category,\n    logs                :   server_url+prefix.logs,\n    status              :   server_url+prefix.status,\n    notification        :   server_url+prefix.notification,\n    file                :   server_url+'file',\n    filelog            :   server_url+'file-log'\n}\n\nexport default Url;\n","import axios from 'axios';\nimport Url from 'Services/ServerUrl';\nimport { Token } from 'Services';\n\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface request{\n    url     :   string,\n    headers  ?:   any,\n    params  ?:   any,\n    method  :   'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n}\n\n\nexport const request = async(data:request) =>{\n    let config:any = data;\n    let format:Format = {\n        network_error : false,\n        status        : 0,\n        data          : '',\n    }\n\n    if(config.headers === undefined){\n        config['headers'] = {\n            'Content-Type'  :   'application/json',\n            'Accept'        :   'application/json',\n            'Authorization' :   'Bearer '+Token.get(),\n        };\n    }\n\n\n    await axios(config).then( response => {\n        format.status = response.status;\n        format.data = response.data;    \n    }).catch( async (error) =>{\n        format = await handleError(error,config);\n    });\n    \n\n    return format;\n}\n\n\nconst retry =  async (request:request) =>{\n    let ret = {};\n    await axios(request).then( response => {\n            ret = {success : true,response: response}; \n        }).catch( error =>{\n            ret = {success : false,response: error};\n        });\n\n    return ret;\n}\n\n\n\nconst refresh =  async() => {\n    let ret = {};\n\n    await axios({\n        method  :   \"POST\",\n        url     :   Url.refresh,\n        headers :   {\n            'Content-Type'  :   'application/json',\n            'Accept'        :   'application/json',\n            'Authorization' :   'Bearer '+Token.get(),\n        },\n    }).then( response => {\n        ret = {\n            success:true,\n            response :response,\n        }\n    }).catch( error =>{\n        ret = {\n            success:false,\n            response :error,\n        }\n    })\n\n    return ret;\n}\n\n\nconst handleError = async (error:any,request:request) =>{\n    \n    let format:Format = {\n        network_error : false,\n        status        : 0,\n        data          : '',\n    }\n\n    if(!error.response){\n        format.network_error = true;    \n        return format;\n    }\n\n    switch(error.response.status){\n        // case 429:\n        //     let counter = 0;\n        //     while(counter<3){\n        //         let a:any;\n        //         setTimeout(async () => {\n        //             a = await recall();\n        //             if(a.success){\n        //                 format.status = a.response.status;\n        //                 format.data = a.response.data;\n        //                 return format;\n        //             }else{\n        //                 if(a.response && a.response.response.status === 429)\n        //                     counter = counter + 1;\n        //                 else{\n        //                     format.network_error = false;\n        //                     return format;\n        //                 }\n        //             }\n        //         }, 5000);\n        //     }\n        //     format.network_error = false;\n        //     return format;\n        case 401:\n            if(!Token.exist() && Url.login === request.url){\n                format.data = error.response.data;\n                format.network_error = false;\n                format.status =error.response.status;\n                return format;\n            }\n            \n            let a:any = await refresh();\n\n            if(a.success){\n                let tok = a.response.data.token\n                Token.save(tok);\n                \n                request.headers = {\n                    'Content-Type'  :   'application/json',\n                    'Accept'        :   'application/json',\n                    'Authorization' :   'Bearer '+tok,\n                }\n\n                let b:any = await retry(request);\n                if(b.success){\n                    format.status = b.response.status;\n                    format.data = b.response.data;\n                    return format;\n                }else{\n                    format.network_error = false;\n                    return format;\n                }\n            }else{\n                format.status = a.response.response.status;\n                format.network_error = false;\n                return format;\n            }\n        default : \n            format.data = error.response.data;\n            format.network_error = false;\n            format.status =error.response.status;\n            return format;\n    }\n}\n","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = {\n    data    : 'pdata',\n    table   : 'ptable',\n    filter  : 'pfilter',\n    params  : 'pparams',\n    status  : \"pstatus\",\n};\nexport const Suppliers          = {\n    data    : \"sdata\",\n    table   : \"stable\",\n    filter  : \"sfilter\",\n    params  : \"sparams\",\n    status  : \"sstatus\",\n};\n\nexport const Users              = {\n    data    : \"udata\",\n    filter  : \"ufilter\",\n    params  : \"uparams\",\n    status  : \"ustatus\",\n};\n\nexport const MasterCodes        = {\n    data    : \"mdata\",\n    params  : \"mparams\",\n    status  : \"sstatus\",\n};\n\nexport const Category           = \"Category\";\n\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n\nexport const status = {\n    error       : 'error',\n    loggedIn    : 'loggedIn',\n    caller      : 'caller',\n    graph       : \"graph\",\n}\n\nexport const Activities  = {\n    data   : \"adata\",\n    params : \"aparams\",\n    status : \"astatus\",\n}\n\nexport const Notifications  = {\n    data   : \"ndata\",\n    params : \"nparams\",\n    status : \"nstatus\",\n}\n\nexport const Logs = {\n    data    : \"logsdata\",\n    params  : \"logsparam\",\n    status  : \"logsstatus\",\n}","import { NavigationTitle as NT } from './Types';\n\ntype control = \"home\" | \"products\" | \"product_master_file_maintenance\" | \"suppliers\" | \"users\" | \"reports\";\n\ninterface Navigation {\n    title   ?: string,\n    control : control,\n}\n\nexport const NavigationTitle = (a:Navigation) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr,status } from './Types';\nimport {Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\n\nexport const Products = () => {\n        return async (dispatch:any,getState:any) => {\n\n            let tempProduct = getState().Products.data;\n            let params = getState().Products.params;\n\n            dispatch({type    : pr.data,payload : '',});\n            dispatch({type    : pr.status,payload : \"pending\",});\n\n\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({type    : status.loggedIn,payload : false})\n                dispatch({type    : pr.status,payload : \"done\",});\n\n                return;\n            }\n\n            const a = await request({\n                url     : Url.products,\n                method  : 'GET',\n                params    : params\n            })\n\n\n            if (a.status === 200) {\n                dispatch({type    : pr.data,payload : a,});\n                dispatch({type    : pr.status,payload : \"done\",});\n                return;\n            }\n\n            dispatch({type    : status.error,payload : true,});\n            dispatch({type    : pr.status,payload : \"pending\",});\n            dispatch({type    : pr.data,payload : tempProduct});\n            return;\n        }\n}\n\nexport const ProductsTable = (data:{}) => {\n    return async (dispatch:any) => {\n        dispatch({type    : pr.table,payload : data});\n    }\n}\n\nexport const ProductsFilter = (filter:boolean) => {\n    return async (dispatch:any) => {    \n        dispatch({type:pr.filter,payload:filter});\n    }\n}\n\nexport const ProductsParams = (data:any) => {\n    return async (dispatch:any) => {    \n        dispatch({type:pr.params,payload:data});\n    }\n}","import { Suppliers as sp,status } from './Types';\nimport { Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\n\n\nexport const Suppliers = () => {\n        return async (dispatch:any,getState:any) => {\n            \n            let tempSupplier = getState().Suppliers.data;\n            let params = getState().Suppliers.params;\n\n\n            dispatch({type  : sp.data,payload : ''});\n            dispatch({type  : sp.status,payload : 'pending'});\n\n\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({type    : status.loggedIn,payload : false})\n                dispatch({type  : sp.status,payload : 'done'});\n                return;\n            }\n\n            const a = await request({url     : Url.suppliers,method  : 'GET',params    : params,})\n\n            if (a.status === 200) {\n                dispatch({type    : sp.data,payload : a,});\n                dispatch({type  : sp.status,payload : 'done'});\n                return;\n            }\n\n            dispatch({type    : status.error,payload : true,});\n            dispatch({type  : sp.status,payload : 'done'});\n            dispatch({type  : sp.data,payload : tempSupplier});\n            return\n        }\n}\n\nexport const SuppliersTable = (data:{}) => {\n    return async (dispatch:any) => {\n        dispatch({type    : sp.table,payload : data});\n    }\n}\n\nexport const SuppliersFilter = (filter:boolean) => {\n    return async (dispatch:any) => {    \n        dispatch({type:sp.filter,payload:filter});\n    }\n}\n\nexport const SuppliersParams = (data:any) => {\n    return async (dispatch:any) => {    \n        dispatch({type:sp.params,payload:data});\n    }\n}","import { Users as pr, status } from './Types';\nimport { Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\nexport const Users = () => {\n        return async (dispatch:any,getState:any) => {\n\n            let tempData = getState().Users.data;\n            let params   = getState().Users.params;\n\n\n            dispatch({type    : pr.data,payload : '',});\n            dispatch({type    : pr.status,payload : \"pending\",});\n\n\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({type    : status.loggedIn,payload : false,})\n                dispatch({type    : pr.status,payload : \"done\",})\n                return;\n            }\n\n            const a = await request({url     : Url.user,method  : 'GET',params    : params})\n\n            if (a.status === 200) {\n                dispatch({type    : pr.data,payload : a,});\n                dispatch({type    : pr.status,payload : \"done\",});\n                return;\n            }\n            \n            dispatch({type    : status.error,payload : true});\n            dispatch({type    : pr.status,payload : \"done\",});\n            dispatch({type    : pr.data,payload : tempData,});\n            return;\n\n        }\n}\n\nexport const UsersFilter = (filter:boolean) => {\n    return async (dispatch:any) => {    \n        dispatch({type:pr.filter,payload:filter});\n    }\n}\n\nexport const UsersParams = (data:any) => {\n    return async (dispatch:any) => {    \n        dispatch({type:pr.params,payload:data});\n    }\n}","import { Search as sr } from './Types';\n\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = () =>{\n\n    // switch (params.target){\n    //     case \"users\" :\n    //         return async (dispatch:any) => {\n\n    //             dispatch({\n    //                 type    : Users,\n    //                 payload : '',\n    //             });\n\n    //             await Requests.User.search(params.query).then((response)=>dispatch({\n    //                 type    : Users,\n    //                 payload : response,\n    //             }));\n    //         }\n\n    //     case \"products\":\n    //         return async (dispatch:any) => {\n    //             dispatch({\n    //                 type    : Products,\n    //                 payload : '',\n    //             });\n\n    //             await Requests.Products.search(params.query).then((response)=>dispatch({\n    //                 type    : Products,\n    //                 payload : response,\n    //             }));\n    //         }\n    //     case \"suppliers\":\n    //         return async (dispatch:any) => {\n    //             dispatch({\n    //                 type    : Suppliers,\n    //                 payload : '',\n    //             });\n\n    //             await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n    //                 type    : Suppliers,\n    //                 payload : response,\n    //             }));\n    //         }\n    // }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { \n    Suppliers as sp, \n    Products as pr, \n    Users as us,\n    Logs,\n    MasterCodes as ma, status } from './Types';\nimport {request} from 'Services/Requests/StaticMethods';\nimport { Token } from 'Services';\nimport Url from 'Services/ServerUrl';\n\ntype component = \"supplier\" | \"product\" | \"user\" | \"master\" | \"logs\";\n\ninterface params {\n    page        : number,\n    per_page    : number\n}\n\nexport const Filter = (filter:any,component:component,extra_params:params) => {\n\n    let params = '';\n    if(filter){\n        Object.keys(filter).forEach( (a:any) => {\n            if(filter[a].key){\n                if(params === ''){\n                    params = a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }else{\n                    params = params+\"&\"+a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }\n            }\n        });\n    }\n    \n    switch(component){\n        case \"supplier\" :\n            return async (dispatch:any,getState:any) => {\n\n                let tempData = getState().Suppliers.data;\n\n                dispatch({type    : sp.data,payload : '',});\n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({type    : status.loggedIn,payload : false,})\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.suppliers,\n                    params : {\n                        filter  : JSON.stringify(filter),\n                        per_page: extra_params.per_page,\n                        page    : extra_params.page\n                    },\n                    method  : 'GET',\n                })\n\n\n                if (a.status === 200) {\n                    dispatch({type    : sp.data,payload : a,});\n                    return;\n                }\n\n                dispatch({type    : status.error,payload : true,});\n                dispatch({type    : sp.data,payload : tempData,});\n                return;\n            }\n        case \"product\" :\n            return async (dispatch:any,getState:any) => {\n\n                let tempData = getState().Products.data;\n                dispatch({type    : pr.data,payload : '',});\n    \n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({type    : status.loggedIn,payload : false,})\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.products,\n                    params : {\n                        filter  : JSON.stringify(filter),\n                        per_page: extra_params.per_page,\n                        page    : extra_params.page\n                    },\n                    method  : 'GET',\n                })\n\n                \n                if (a.status === 200) {\n                    dispatch({type    : pr.data,payload : a,});\n                    return;\n                }\n\n                dispatch({type    : status.error,payload : true});\n                dispatch({type    : pr.data,payload : tempData,});\n                return;\n            }\n        case \"user\" :\n            return async (dispatch:any,getState:any) => {\n\n                let tempData = getState().Users.data;\n                dispatch({type    : us.data,payload : ''});\n    \n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({\n                        type    : status.loggedIn,\n                        payload : false,\n                    })\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.user,\n                    params : {\n                        filter  : JSON.stringify(filter),\n                        per_page: extra_params.per_page,\n                        page    : extra_params.page\n                    },\n                    method  : 'GET',\n                })\n\n\n                if (a.status === 200) {\n                    dispatch({type    : us.data,payload : a});\n                    return;\n                }\n\n                dispatch({type    : status.error,payload : true});\n                dispatch({type    : us.data,payload : tempData});\n\n                return;\n            }\n        case \"master\" :\n            return async (dispatch:any,getState:any) => {\n\n                let tempData = getState().MasterCodes.data;\n                dispatch({type    : ma.data,payload : '',});\n    \n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({type    : status.loggedIn,payload : false})\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.productMasterList,\n                    params : {\n                        filter  : JSON.stringify(filter),\n                        per_page: extra_params.per_page,\n                        page    : extra_params.page\n                    },\n                    method  : 'GET',\n                })\n\n\n                if (a.status === 200) {\n                    dispatch({type    : ma.data,payload : a,});\n                    return;\n                }\n\n                dispatch({type    : status.error,payload : true});\n                dispatch({type    : ma.data,payload : tempData});\n                return;\n            }\n        case \"logs\" :\n            return async (dispatch:any,getState:any) => {\n\n                let tempData = getState().Logs.data;\n                dispatch({type    : Logs.data,payload : '',});\n    \n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({type    : status.loggedIn,payload : false})\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.logs,\n                    params : {\n                        // filter  : JSON.stringify(filter),\n                        per_page: extra_params.per_page,\n                        page    : extra_params.page\n                    },\n                    method  : 'GET',\n                })\n\n\n                if (a.status === 200) {\n                    dispatch({type    : Logs.data,payload : a,});\n                    return;\n                }\n\n                dispatch({type    : status.error,payload : true});\n                dispatch({type    : Logs.data,payload : tempData});\n                return;\n            }\n    }   \n}\n","import { MasterCodes as MC,status } from './Types';\nimport { Token } from 'Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\n\nexport const MasterCodes = () => {\n    return async (dispatch:any,getState:any) => {\n        \n        let tempMasterCode = getState().MasterCodes.data;\n        let params = getState().MasterCodes.params;\n\n        dispatch({type    : MC.data,payload : '',});\n        dispatch({type    : MC.status,payload : 'pending',});\n        \n    \n        const token = Token.get();\n        if(token === '' || token === null){\n            dispatch({type    : status.loggedIn,payload : false,});\n            dispatch({type    : MC.status,payload : 'done',});\n            return;\n        }\n\n        const a = await request({url     : Url.productMasterList,method  : 'GET',params    : params})\n\n        if (a.status === 200) {\n            dispatch({type    : MC.data,payload : a});\n            dispatch({type    : MC.status,payload : 'done',});\n            return;\n        }\n\n        dispatch({type    : status.error,payload : true,});\n        dispatch({type    : MC.data,payload:tempMasterCode});\n        dispatch({type    : MC.status,payload : 'done',});\n        return\n    }\n}\n\nexport const MasterCodeParams = (data:any) => {\n    return async (dispatch:any) => {    \n        dispatch({type:MC.params,payload:data});\n    }\n}","import { status as stat } from './Types';\nimport {Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\nexport const loggedIn = (a:boolean) => {\n    return (dispatch:any) => {\n        dispatch({\n            type    : stat.loggedIn,\n            payload : a\n        });\n    }\n}\n\nexport const error = (a:boolean) => {\n    return (dispatch:any) => {\n        dispatch({\n            type    : stat.loggedIn,\n            payload : a\n        });\n    }\n}\n\nexport const caller = (a:boolean) => {\n    return (dispatch:any) => {\n        dispatch({\n            type    : stat.caller,\n            payload : a\n        });\n    }\n}\n\n\nexport const graph = () => {\n    return async (dispatch:any,getState:any) => {\n        let tempGraph = getState().status.graph;   \n        const token = Token.get();\n        \n        if(token === '' || token === null){\n            dispatch({type    : stat.loggedIn,payload : false});\n            return;\n        }\n\n        const a = await request({\n            url     : Url.status,\n            method  : 'GET',\n        })\n\n        if (a.status === 200) {\n            dispatch({type    : stat.graph,payload : a,});\n            return;\n        }\n\n        dispatch({type    : stat.error,payload : true,});\n        dispatch({type    : stat.graph,payload : tempGraph});\n        return;\n    }\n}","import { Notifications as act,status } from './Types';\nimport { Token } from 'Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\n\nexport const Notifications = (param?:any) => {\n    return async (dispatch:any,getState:any) => {\n        \n        let tempActivities = getState().Notifications.data;\n        let params = param ? param :  getState().Notifications.params;\n\n        dispatch({type    : act.data,payload : '',});\n        dispatch({type    : act.status,payload : 'pending',});\n        \n    \n        const token = Token.get();\n        if(token === '' || token === null){\n            dispatch({type    : status.loggedIn,payload : false,});\n            dispatch({type    : act.status,payload : 'done',});\n            return;\n        }\n        \n        const a = await request({url     : Url.notification,method  : 'GET',params    : params})   \n\n        if (a.status === 200) {\n            dispatch({type    : act.data,payload : a});\n            dispatch({type    : act.status,payload : 'done',});\n            return;\n        }\n\n        dispatch({type    : status.error,payload : true,});\n        dispatch({type    : act.data,payload:tempActivities});\n        dispatch({type    : act.status,payload : 'done',});\n        return;\n    }\n}\n\nexport const NotificationsParams = (data:any) => {\n    return async (dispatch:any) => {    \n        dispatch({type:act.params,payload:data});\n    }\n}","import { Logs as log,status } from './Types';\nimport {Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\n\n\nexport const Logs = () => {\n        return async (dispatch:any,getState:any) => {\n            \n            let tempSupplier = getState().Logs.data;\n            let params = getState().Logs.params;\n\n            dispatch({type  : log.data,payload : ''});\n            dispatch({type    : log.status,payload : \"pending\",});\n\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({type    : status.loggedIn,payload : false})\n                dispatch({type    : log.status,payload : \"done\",});\n                return;\n            }\n\n            const a = await request({url     : Url.logs,method  : 'GET',params    : params,})\n\n            if (a.status === 200) {\n                dispatch({type    : log.data,payload : a,});\n                dispatch({type    : log.status,payload : \"done\",});\n                return;\n            }\n\n            dispatch({type    : status.error,payload : true,});\n            dispatch({type    : log.status,payload : \"pending\",});\n            dispatch({type  : log.data,payload : tempSupplier});\n            return\n        }\n}\n\n\nexport const LogsParams = (data:any) => {\n    return async (dispatch:any) => {    \n        dispatch({type:log.params,payload:data});\n    }\n}","import withRouterInnerRef from '../WithRouterInnerRef';\nimport Url from '../ServerUrl';\nimport React from 'react';\nimport {Format,request} from './StaticMethods';\nimport {useSnackbar} from 'notistack'\nimport { Button } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport {error as errorAction} from 'Redux/Actions';\nimport {useDispatch} from 'react-redux';\nimport { Token } from 'Services';\n\n\n\ninterface credential{\n    username : string,\n    password : string,\n}\n\n\n\nconst Auth = (props:any) => {\n    \n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const dispatch = useDispatch();\n\n\n    const action = (key:any) => (\n        <Button variant=\"text\" color=\"inherit\" onClick={ () => closeSnackbar(key)}>\n            <Close />\n        </Button>\n    );\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(errorAction(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n\n    React.useImperativeHandle(props.request,()=>({\n        \n        async login(credential:credential){\n           \n            let format = {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n\n            format = await request({\n                url     : Url.login,\n                method  : 'POST',\n                headers  : {\n                    'Content-Type'  :   'application/json',\n                    'Accept'        :   'application/json'\n                },\n                params  : {\n                    username : credential.username,\n                    password : credential.password,\n                },\n            })\n\n            if(format.status !== 200 && format.status !== 401 || format.network_error ){\n                enqueueSnackbar(\n                    <div \n                        dangerouslySetInnerHTML={{\n                            __html: 'Something wrong with the server. Please try again later.<br />'\n                    }} />\n                    ,{\n                    variant:\"error\",\n                    autoHideDuration : 10000,\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action:action\n                });\n            }\n\n            return format;\n        },\n\n        async me(){\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.me,\n                method  : 'GET',\n            })\n            \n            return processData(format);\n\n        }\n\n    }));\n\n    return \"\";\n}\n\nexport default withRouterInnerRef(Auth);","import Cookies from 'universal-cookie';\n\nexport default class Token{\n        \n    public static save(token:any):void{\n        // this.remove();\n        let a = new Date();\n        a.setDate(a.getDate()+ 30); //1440 1 day\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n        return;\n    }\n\n    public static get():any{\n        let token = new Cookies().get('token');\n\n        if(token !== '' || token !== null || token !== undefined){\n            this.update();\n        }\n        return token;\n    }\n\n    public static exist():any{  \n        const cookies = new Cookies();\n        const token = cookies.get('token');\n\n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n        return true;\n    }\n\n}","import React from 'react';\nimport {request} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\nconst User = (props:any):any => {\n    const dispatch = useDispatch();\n\n    const processData = (data:any) => {\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show : async(user?:Show) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+'?page='+user.page+'&per_page='+user.per_page,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n\n        get : async(id:number) => {\n            const token = Token.get();\n\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+id,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n\n        update : async (user:Users) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+user.id,\n                method  : 'PATCH',\n                params    : user\n            })\n            return processData(format);\n        },\n\n        add : async (user:Users) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user,\n                method  : 'POST',\n                params    : user\n            })\n            return processData(format);\n        },\n\n        search : async(search:string) =>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+'?search='+search,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n        filter : async (filter:any) => {\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+'?filter=true&'+params,\n                method  : 'GET',\n            })\n            return processData(format);\n        }\n\n    }));\n    return null;\n}\n\nexport default withRouterInnerRef(User);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product                     : string,\n    // product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n    search ?: string,\n}\n\n\nconst Products = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:any) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show    : async(user?:showProduct)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.products,\n                method  : 'GET',\n                params    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.user+id,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n        update  : async(product:Products) =>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.products+product.id,\n                method  : 'PATCH',\n                params    : product\n            })\n            return processData(format);\n        },\n\n        add  : async(product:Products) =>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.products,\n                method  : 'POST',\n                params    : product\n            })\n            return processData(format);\n        },\n\n        search  : async(search:string) =>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.products+'?search='+search,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n\n        filter  : async(filter:any)=>{\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.products+'?filter=true&'+params,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n    }));\n    \n    return null;\n    \n}\n\nexport default withRouterInnerRef(Products);","import React from 'react';\nimport {request} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n    search  ?: string\n}\n\n\nconst Suppliers = (props:any):any =>{\n    const dispatch = useDispatch();\n\n    const processData = (data:any) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show : async(user?:showSupplier) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers,\n                method  : 'GET',\n                params    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+id,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n\n        update : async (supplier:Supplier) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+supplier.id,\n                method  : 'PATCH',\n                params    : supplier\n            })\n            return processData(format);\n        },\n\n        add : async (supplier:Supplier) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers,\n                method  : 'POST',\n                params    : supplier\n            })\n            return processData(format);\n        },\n\n        search : async(search:string) =>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+'?search='+search,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n\n        filter : async (filter:any) => {\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+'?filter=true&'+params,\n                method  : 'GET',\n            })\n            return processData(format);\n        }\n\n\n    }));\n\n    return null\n}\n\nexport default withRouterInnerRef(Suppliers);","import React from 'react';\nimport {request} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface showMasterCodes{\n    page : number,\n    per_page : number,\n    search ?: any,\n}\n\nconst MasterCodes = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:any) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        \n        show    : async(user:showMasterCodes)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList,\n                method  : 'GET',\n                params    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList+id,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n        update  : async(up:any)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList+up.id,\n                method  : 'PATCH',\n                params    : up\n            })\n            return processData(format);\n        },\n        add     : async(pml:any)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList,\n                method  : 'POST',\n                params    : pml\n            });\n            return processData(format);\n        },\n        filter  : async(filter:any)=>{\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList+'?filter=true&'+params,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n    }));    \n\n    return null;\n}\n\nexport default withRouterInnerRef(MasterCodes);","import React from 'react';\nimport withRouterInnerRef from '../WithRouterInnerRef';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {request,Format} from './StaticMethods';\nimport {error as errorAction} from 'Redux/Actions';\nimport {useDispatch} from 'react-redux';\n\n\ninterface show{page : number,per_page : number,search?:string};\ninterface add{name : string}\n\n\nconst Category = (props:any):any => {\n    \n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(errorAction(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        show : async(user:show) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.category,\n                method  : 'GET',\n                params    : user,\n            })\n            return processData(format);\n        },\n\n        get : async(user:number) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.category+user,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n        add : async(pml:add) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.category,\n                method  : 'POST',\n                params    : pml,\n            })\n            return processData(format);\n        },\n    }));\n\n    return null;\n\n}\n\n\nexport default withRouterInnerRef(Category);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface show{\n    page : number,\n    per_page : number,\n}\n\nconst Logs = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:any) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        show: async(logs:show) => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.logs+'?page='+logs.page+'&per_page='+logs.per_page,\n                method  : 'GET',\n            })\n            return processData(format);\n        }\n    }));\n\n    return null;\n\n\n}\n\n\nexport default withRouterInnerRef(Logs);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\n\nconst Status = (props:any):any => {\n    const dispatch = useDispatch();\n\n    const processData = (data:any) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show : async() => {\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.status,\n                method  : 'GET',\n            })\n            return processData(format);\n        }\n\n    }));\n\n    return null;\n}\n\nexport default withRouterInnerRef(Status);\n\n\n","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface showMasterCodes{\n    page : number,\n    per_page ?: number,\n}\n\nconst Notification = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:any) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        \n        show    : async(user:showMasterCodes)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.notification,\n                method  : 'GET',\n                params    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.notification+id,\n                method  : 'GET',\n            })\n            return processData(format);\n        },\n\n        add     : async(pml:any)=>{\n            const token = Token.get();\n            let format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.notification,\n                method  : 'POST',\n                params    : pml\n            });\n            return processData(format);\n        }\n    }));\n\n    return null;\n}\n\nexport default withRouterInnerRef(Notification);","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport {loggedIn} from 'Redux/Actions';\nimport {useDispatch} from 'react-redux';\n\nconst title = 'Product Inquiry System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const request:any = React.useRef();\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n    const dispatch = useDispatch();\n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await request.current.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: a.data.message\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    dispatch(loggedIn(true));\n                    props.history.push(props.location.state === undefined ? '/' : props.location.state);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n        }\n        return;\n    }\n\n    return(\n        <div className=\"login\">\n            <Requests.Auth request={request} />\n            \n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { Paper, Typography, Table, TableHead, TableRow, TableCell, TableBody, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Dropbox, VanUtility, Account } from 'mdi-material-ui';\nimport { ArrowForward } from '@material-ui/icons';\nimport {withRouter} from 'react-router-dom';\nimport { Requests } from 'Services';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport moment from 'moment';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Chart from 'react-google-charts';\n\nconst Admin = ( props :any ) => {\n\n    const logsRequest:any = React.useRef();\n    const statusRequest:any = React.useRef();\n\n    const users = useSelector((state:any) => state.Users.data); \n    const products = useSelector((state:any) => state.Products.data); \n    const suppliers = useSelector((state:any) => state.Suppliers.data);\n    const graph = useSelector((state:any) => state.status.graph.data);\n    const data = useSelector((state:any) => state.Logs.data);\n    const [open, setOpen] = React.useState(false);\n    const [modal,setModal] = React.useState();\n    const [target,setTarget] = React.useState();\n    \n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModal = (data:any,target:any) => {\n        setModal(data);\n        setOpen(true);\n        setTarget(target);\n    }\n\n    const dataModal = () => {\n\n        const ProductMasterList = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.category.name}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n        \n        const user = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">User Name</TableCell>\n                        <TableCell >{data.username}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Name</TableCell>\n                        <TableCell >{data.first_name+\" \"+data.last_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Company</TableCell>\n                        <TableCell >{data.company}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Level</TableCell>\n                        <TableCell >{data.level.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Activated</TableCell>\n                        <TableCell >{parseInt(data.activated) === 1 ? \"Yes\" : \"No\"}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const supplier = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Name</TableCell>\n                        <TableCell >{data.supplier_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">TIN</TableCell>\n                        <TableCell >{data.tin}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Address</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact Person</TableCell>\n                        <TableCell >{data.contact_person}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact No.</TableCell>\n                        <TableCell >{data.contact_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const product = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product.product_name}</TableCell>\n                    </TableRow>\n                    {/* <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow> */}\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Serial Number</TableCell>\n                        <TableCell >{data.serial_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Date</TableCell>\n                        <TableCell >{moment(data.delivery_date).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty</TableCell>\n                        <TableCell >{data.warranty+\" Month(s)\"}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty Start</TableCell>\n                        <TableCell >{moment(data.warranty_start).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">End Date</TableCell>\n                        <TableCell >{moment(data.warranty_end).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Doc</TableCell>\n                        <TableCell >{data.reference_delivery_document}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Status</TableCell>\n                        <TableCell >{data.status.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Remarks</TableCell>\n                        <TableCell >{data.remarks}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n\n        return (\n            <React.Fragment>\n            {\n                modal ?\n                    <Dialog\n                        // fullWidth={fullWidth}\n                        // maxWidth=\"sm\"\n                        open={open}\n                        onClose={() => setOpen(false)}\n                        aria-labelledby=\"max-width-dialog-title\"\n                        className=\"modal-history\"\n                        disablePortal = {true}\n                    >\n                        <DialogTitle>History</DialogTitle>\n                        <DialogContent>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {\n                                        target === \"Product\"  ? product(modal)    :\n                                        target === \"Supplier\" ? supplier(modal)   : \n                                        target === \"User\"     ? user(modal)       : \n                                        target === \"ProductMasterList\" ? ProductMasterList(modal) : \"\"\n                                    }\n                                </TableBody>\n                            </Table>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant=\"contained\" color=\"primary\" onClick={ () => setOpen(false)}>\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </Dialog> \n                :\n\n                ''\n            }\n            </React.Fragment>\n\n            \n        );\n    }\n\n\n    \n\n    \n\n\n\n    return(\n        <div>\n\n            <Requests.Logs request={logsRequest} />\n            <Requests.Status request ={statusRequest} />\n\n            {dataModal()}\n            <div className=\"justify-content-center row\" style={{marginTop:'90px'}}>\n                <div className=\"col-lg text-center iconButton\">\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\"> Total Products</div>\n                        <div className=\"amount-box\">{graph  ? graph.total.product : 0 }</div>\n                        {/* <div className=\"info-box\">more info <ArrowForward /> </div> */}\n                        <Button size=\"small\" className=\"info-box\" variant=\"contained\" color=\"primary\" onClick={ () => props.history.push('/products')}>More Info <ArrowForward /></Button>\n                    </Paper>\n                </div>\n                <div className=\"col-lg text-center iconButton\">\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\">Total Suppliers</div>\n                        <div className=\"amount-box\">{suppliers  ? graph.total.supplier : 0 }</div>\n                        {/* <div className=\"info-box\">more info <ArrowForward /> </div> */}\n                        <Button size=\"small\" className=\"info-box\" variant=\"contained\" color=\"primary\" onClick={ () => props.history.push('/suppliers')} >More Info <ArrowForward /></Button>\n                    </Paper>\n                </div>\n                <div className=\"col-lg text-center iconButton\" >\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><Account className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\"> Total User</div>\n                        <div className=\"amount-box\">{users  ? graph.total.user : 0 }</div>\n                        {/* <div className=\"info-box\"> more info <ArrowForward /> </div> */}\n                        <Button size=\"small\" className=\"info-box\" variant=\"contained\" color=\"primary\" onClick={ () => props.history.push('/users')}>More Info <ArrowForward /></Button>\n                    </Paper>\n                </div>\n            </div>\n            <Paper className=\"admin-pie-graph col-6 offset-3\">\n                {\n                    graph !== undefined ?\n                        <Chart\n                            width={'100%'}\n                            height={'100%'}\n                            chartType=\"PieChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                                ['Task','Products Status'],\n                                ['New',graph.status.New],\n                                ['Replaced',graph.status.Replaced],\n                                ['Returned',graph.status.Returned],\n                                ['Repaired', graph.status.Repaired],\n                            ]}\n                            options={{\n                                title: 'Products Status',\n                                // Just add this option\n                                is3D: true,\n                            }}\n                            rootProps={{ 'data-testid': '2' }}\n                        />\n                    : ''\n                }\n               \n            </Paper>\n\n            <Paper style={{whiteSpace:'nowrap'}} className=\"paper\">\n                <Typography variant=\"subtitle1\" component=\"h6\" style={{padding:'10px',fontWeight:'bolder',textTransform:'uppercase'}}>\n                    User Activities\n                </Typography>\n                <div style={{overflow:'auto'}}>\n                    <Table size=\"small\">\n                        <TableHead className=\"user-logs-table-head\">\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Action</TableCell>\n                                <TableCell>Target</TableCell>\n                                <TableCell>Previous</TableCell>\n                                <TableCell>Update</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                data ?\n                                data.data.data.slice(0,10).map( (value:any,key:any) =>\n                                    <TableRow key={value.id} hover>\n                                        <TableCell>{moment(value.updated_at).format('ll, h:mm a')}</TableCell>\n                                        <TableCell style={{textTransform:'uppercase'}}>{value.user.first_name+\" \"+value.user.last_name}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.action}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.target}</TableCell>\n                                        <TableCell>\n                                            {\n                                                value.previous ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.previous,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                                value.update ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.update,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                                \n                                :\n                                skeletonTable()\n                            }\n                            \n                        </TableBody>\n                    </Table>\n                </div>\n                <Button onClick={()=>props.history.push('/reports')} size=\"small\" variant=\"contained\" color=\"primary\" className=\"footer-button\">\n                    More info <ArrowForward />\n                </Button>\n            </Paper>\n        </div>\n    );\n} \n\nexport default withRouter(Admin);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle } from 'Redux/Actions';\n// import { AssignmentInd, Assignment, SupervisorAccount } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { withRouter } from 'react-router-dom';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\nimport { Paper } from '@material-ui/core';\nimport Admin from './Admin';\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle({title:'Home', control:'home'}));\n    },[dispatch])\n\n\n    return(\n        <div className=\"main-content\">\n            { user.level === 1 ?\n                <Admin />\n            :\n                <div className=\"mx-auto\" style={{marginTop:'150px'}}>\n                    <React.Fragment>\n                        <div className=\"justify-content-center row\">\n                            <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                                <Paper>\n                                    <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                                    <div className=\"col\">Products</div>\n                                </Paper>\n                            </div>\n                            \n                            <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                                <Paper>\n                                    <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                                    <div className=\"col\">Suppliers</div>\n                                </Paper>\n                            </div>\n                            \n                        </div>\n                    </React.Fragment>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\n// import './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n    const userRequest:any = React.useRef();\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await userRequest.current.update(usersInput).then( \n            async (response:any) =>{\n                if(response.status === 200){\n                    enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                    setModalEdit(false);\n                    dispatch(UserAccount());\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xs\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Update Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n                            <form className =\"form-group edit-profile\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            <Requests.User request={userRequest} />\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography className=\"nav-title\" variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* {props.menu_title} */}\n\n                        <img src=\"/img/ideaserv.png\" alt=\"Ideaserv System Inc\" />\n                        <div className=\"nav-desc\">Product Inquiry System</div>\n                    </Typography>\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/user.png\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/user.png\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        \n                                        {props.user.first_name && props.user.last_name ? props.user.first_name+\" \"+props.user.last_name : ''}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        {props.user.first_name && props.user.last_name ? \" Logout\" : \" Login\" }\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import { UserAccount as UA,status } from './Types';\nimport { Token } from 'Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\n\nexport const UserAccount = () => {\n    return async (dispatch:any,getState:any) => {\n\n        let tempProduct = getState().UserAccount.data;\n\n        const token = Token.get();\n        if(token === '' || token === null){\n            dispatch({type    : status.loggedIn,payload : false})\n            return;\n        }\n        \n        const a = await request({url     : Url.me,method  : 'GET',})\n        if(a.status === 200){\n            dispatch({type    : UA,payload : a.data});   \n            return;\n        }\n     \n        dispatch({type    : status.error,payload : true,});\n        dispatch({type    : UA,payload : tempProduct});\n        return;\n    }\n}\n","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                {/* <p>{props.menu_title}</p> */}\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover, makeStyles, Theme, createStyles, Fade, Paper } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport Popper,{ PopperPlacementType } from '@material-ui/core/Popper';\n\n\n\nconst styles = {\n    hidden : {\n        visibility:'hidden',\n    },\n    inherited : {\n        position : 'inherit',\n    },\n    shadowed : {\n        boxShadow : '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\n    },\n    icon : {\n        backgroundColor : '#3f50b5',\n        color           : 'white',\n        borderRadius    : '20px',\n        padding         : '2px',\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position : 'inherit'\n        },\n        list : {\n            root : {\n                visibility : 'hidden',\n                '&:hover' : {\n                    visibility : 'visible'\n                }\n            }\n        }\n\n    }),\n);\n\nconst SidebarList = (props:any) => {\n    const control = useSelector( (state:any) => state.NavigationTitle.control);\n    // const classes = useStyles(props);\n\n    const [popperOpen,setPopperOpen] = React.useState(false);\n    const [popperAnchor, setPopperAnchor] = React.useState<HTMLButtonElement | null>(null);\n    const [popperTitle,setPopperTitle] = React.useState<string>();\n    const [popperActive,setPoppperActive] =  React.useState(false);\n\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    const popper = (event:any,title:any,open:boolean) => (\n        event: any,\n      ) => {\n        if(!props.sidebar){\n            // console.log(event);\n            // console.log(event);\n            setPopperTitle(title.name);\n            setPopperAnchor(event.currentTarget);\n            setPopperOpen(open);\n            setPoppperActive(open ? title.control === control ? true : false : false);\n        }  \n    };\n\n    return(\n        <React.Fragment>\n            <Popper open={popperOpen} anchorEl={popperAnchor} placement=\"right\" transition style={{zIndex:3}}>\n                {({ TransitionProps }) => (\n                <Fade {...TransitionProps} timeout={0}>\n                    <Paper className={popperActive ? \"sidebar-popper active-nav\" : \"sidebar-popper\" } style={{color:'#020202b5'}}>\n                        {popperTitle}\n                    </Paper>\n                </Fade>\n                )}\n            </Popper>\n\n\n            <List /*className={!props.sidebar ? classes.root : ''}*/ style={{paddingTop:'4px'}}>\n                {list.map((text:any, index:number) => (\n                    <React.Fragment key={index} >\n                        <ListItem onMouseEnter={(event) => popper(event,text,true)} onMouseLeave={(event) => popper(event,'',false)} className={text.control === control ? \"active-nav\" : \"\"} button onClick={()=>{\n                            \n                            // if(!props.sidebar){\n                            //     props.toggleSidebar();\n                            // }\n\n                            if(!text.props){\n                                if(props.location.pathname !== text.url){\n                                    props.history.push(text.url);\n                                }\n                            }else{\n                                \n                                props.setSidebarProps({\n                                    [text.name] : !props.sidebarProps[text.name],\n                                });\n                            \n                            }\n\n                        }}\n                        >\n                            {\n                                (!text.props) ? \n                                    <React.Fragment >\n                                        <ListItemIcon >{<text.icon style={styles.icon} />}</ListItemIcon>\n                                        <ListItemText /*className={classes.list}*/>{text.name}</ListItemText>\n                                    </React.Fragment>\n                                : \n                                    <React.Fragment>\n                                        <ListItemIcon>  \n                                            {<text.icon />}\n                                        </ListItemIcon>\n                                        <ListItemText>{text.name}</ListItemText>\n                                        {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                    </React.Fragment>\n\n                            }\n                        </ListItem>\n\n                        {\n                            (text.props) ? \n                                <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                    <List component=\"div\" disablePadding>\n                                        {\n                                            text.props.map((value:any,key:number)=>(\n                                                <ListItem button key={key} className=\"nestedSidebar\" \n                                                    \n                                                >\n                                                    <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                    <ListItemText >\n                                                        {value.name}\n                                                    </ListItemText>\t\t\t\t\t\t\t\t\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                                </Collapse>\n                                : ''\n                        }\n                    </React.Fragment>\n                ))}\n            </List>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(SidebarList);","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport {request} from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\nimport Skeleton from '@material-ui/lab/Skeleton';\nconst Log = (props:any) => {\n\n    const [data,setData] = React.useState(null);\n    const [params,setParams] = React.useState({per_page:10,page:1});\n\n    React.useEffect(()=>{\n        if(props.open && props.data !== null){\n            call(params);\n        }\n    },[props.open]);\n\n\n    const call = async (data:any) => {\n        let a = await request({\n            url : Url.filelog+'/'+props.data.filename,\n            method : \"GET\",\n            params : data,\n        });\n\n        if(a.status === 200){\n            setData(a.data);\n            return;\n        }\n        setData(null);\n    }\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) => {\n        setData(null);\n        let pams:any = params;\n        pams.page=newPage+1;\n        call(pams);\n        setParams(pams);\n    }\n     \n    \n\n\n    const skeletonTable = () => {\n        let a:any = [];\n        const tableCell:any = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={'100%'} height={20}  /></TableCell>;\n        \n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={()=>props.setOpen(false)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">Upload log</DialogTitle>\n            <DialogContent>\n                <Paper className=\"notification-table\">\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>id</TableCell>\n                                    <TableCell>Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    data !== null ? \n                                        data.data.map((value:any,key:number) =>\n                                            <TableRow hover key={key}>\n                                                <TableCell>{value.id}</TableCell>\n                                                <TableCell dangerouslySetInnerHTML={{__html:value.message}}></TableCell>\n                                            </TableRow>\n                                        )\n                                    : skeletonTable()\n                                }\n                                \n                            </TableBody>\n                        </Table>\n                        <TablePagination\n                            rowsPerPageOptions={[]}\n                            component=\"div\"\n                            count={data ? data.meta.total : 10}\n                            rowsPerPage={10}\n                            page={data ? data.meta.current_page -1  : 0}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page',\n                            }}\n                            onChangePage={handleChangePage}\n                            // onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                </Paper>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={()=>props.setOpen(false)} color=\"primary\" autoFocus>\n                    Exit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}   \n\nexport default Log;","import React from 'react';\nimport { Paper, Dialog, DialogTitle, DialogContent, DialogActions, Button, Table, TableHead, TableRow, TableBody, TableCell, TablePagination, Fab } from '@material-ui/core';\nimport './notification.style.scss';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Chip from '@material-ui/core/Chip';\nimport moment from 'moment';\nimport { Cached } from '@material-ui/icons';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {NotificationsParams,Notifications} from 'Redux/Actions';\nimport Log from './Log';\n\n\nconst Notification = () => {\n\n    const [open,setOpen] = React.useState(false);\n    const [log,setLog] = React.useState(false);\n    const [data,setData] = React.useState(null);\n    const notification = useSelector((state:any)=>state.Notifications);\n\n    const dispatch = useDispatch();\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) => {\n        let pams:any = notification.params;\n        pams.page=newPage+1;\n        dispatch(NotificationsParams(pams));\n        dispatch(Notifications(pams));\n    }\n\n    const skeletonTable = () => {\n        let a:any = [];\n        const tableCell:any = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={'100%'} height={20}  /></TableCell>;\n        \n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const setErrorMessage = (value:any) => {\n        setData(value);\n        setLog(true);\n    }\n\n    return(\n        <React.Fragment>\n            <Log open={log} setOpen={setLog} data={data} />\n            <Paper className=\"notification\" onClick={()=>setOpen(true)}>\n                Upload Status\n            </Paper>\n            \n            <Dialog\n                fullWidth={true}\n                maxWidth=\"md\"\n                open={open}\n                onClose={()=>setOpen(false)}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Upload Status\n                    <Fab size=\"small\" style={{position:'absolute',right:'30px'}} disabled={notification.status!==\"done\"} className={notification.status === \"done\" ? \"rotate pause\":\"rotate\" } onClick={()=>dispatch(Notifications())} color=\"primary\" >\n                        <Cached />\n                    </Fab>\n                </DialogTitle>\n                \n                <DialogContent>\n                    <Paper className=\"notification-table\">\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>id</TableCell>\n                                    <TableCell>Target</TableCell>\n                                    <TableCell>Status</TableCell>\n                                    <TableCell>Result</TableCell>\n                                    <TableCell>Date</TableCell>\n                                </TableRow>\n                                \n                            </TableHead>\n                            <TableBody>\n                                {\n                                    notification.data ?\n                                        notification.data.data.data.map((value:any,key:number) =>(\n                                            <TableRow hover key={key} className=\"pointer\" onDoubleClick={()=>value.status === \"done\" ? setErrorMessage(value) : null}>\n                                                <TableCell>{value.id}</TableCell>\n                                                <TableCell>{value.type}</TableCell>\n                                                <TableCell>\n                                                    <Chip\n                                                        label={value.status} \n                                                        color={\n                                                            value.status === \"done\" ? \"default\" :\n                                                            value.status === \"processing\" ? \"primary\" :\"secondary\"\n                                                        }\n                                                        style={{\n                                                            textTransform   : \"uppercase\",\n                                                            fontWeight      : \"bolder\",\n                                                            cursor          : \"pointer\",\n                                                        }}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>{value.result === null ? \"\" :  value.result.hasOwnProperty('message') ? value.result.message : value.result.success+'/'+value.result.total+' were sucessfully imported.'}</TableCell>\n                                                <TableCell>{moment(value.created_at).format('lll')}</TableCell>\n                                            </TableRow>\n                                        ))\n                                    : \n                                    skeletonTable()\n                                }\n                                \n                            </TableBody>\n                        </Table>    \n                        <TablePagination\n                            rowsPerPageOptions={[]}\n                            component=\"div\"\n                            count={notification.data ? notification.data.data.meta.total : 10}\n                            rowsPerPage={10}\n                            page={notification.data ? notification.params.page-1 : 0}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page',\n                            }}\n                            onChangePage={handleChangePage}\n                            // onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>setOpen(false)} >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n\nexport default Notification;","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Home, Assessment} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {loggedIn,caller} from 'Redux/Actions';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\nimport Notification from 'Components/Notification';\n\nconst Navigation = (props:any) => {\n\t\n\tconst logo = \"/img/ideaserv.png\";\n\tlet sidebar_properties = [\n\t\t{\n\t\t\tname : \"Home\",\n\t\t\tcontrol : \"home\",\n\t\t\ticon : Home,\n\t\t\turl  : \"/\",\n\t\t\t\n\t\t},{\n\t\t\tname : \"Products\",\n\t\t\tcontrol : \"products\",\n\t\t\ticon : Dropbox,\n\t\t\turl  : '/products',\n\t\t\t\n\t\t},{\n\t\t\tname :\t\"Product Maintenance\",\n\t\t\tcontrol : \"product_master_file_maintenance\",\n\t\t\ticon :  ProgressWrench,\n\t\t\turl  :  '/summary'\n\t\t},{\n\t\t\tname : \"Suppliers\",\n\t\t\tcontrol : \"suppliers\",\n\t\t\ticon :  VanUtility,\n\t\t\turl  : \"/suppliers\", \n\t\t},{\n\t\t\tname : \"Users\",\n\t\t\tcontrol : \"users\",\n\t\t\ticon :  Account,\n\t\t\turl  : \"/users\", \n\t\t\tprops: '',\n\t\t},{\n\t\t\tname : \"Reports\",\n\t\t\tcontrol : \"reports\",\n\t\t\ticon :  Assessment,\n\t\t\turl  : \"/reports\", \n\t\t\tprops: '',\n\t\t}\n\t];\n\n\n\n\n\n\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title);\n\tconst dispatch = useDispatch();\n\t\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[reduxUser]);\n\t\n\n\tif(reduxUser.level !== 1){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\tcontrol : 'home',\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\tcontrol : \"products\",\n\t\t\t\ticon : Dropbox,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\tcontrol : \"suppliers\",\n\t\t\t\ticon :  VanUtility,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t}/*,{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}*/\n\t\t]\n\t}\n\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\tToken.remove();\n\t\tdispatch(loggedIn(false));\n\t\treturn;\n\t}\n\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\t\n\t\t\t{\n\t\t\t\treduxUser.level !== 3 ? <Notification /> : ''\n\t\t\t}\n\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem, InputLabel } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer,ProductsParams,Products} from \"Redux/Actions\";\nimport {useDispatch,useSelector} from 'react-redux';\n\nconst Filter = (props:any):any => {\n\n\n    const dispatch = useDispatch();\n    const products = useSelector( (state:any) => state.Products);\n\n\n    type control =  \"supplier\" | \"product\" | \n                    \"product_description\" | \n                    \"supplier_name\" | \"category\" | \n                    \"serial_number\" | \"warranty\" | \n                    \"warranty_start\" | \"warranty_end\" | \n                    \"status\" | \"delivery_date\" | \n                    \"reference_delivery_document\" | \n                    \"created_by\" | \"remarks\";\n\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    React.useEffect(()=>{\n        if(!products.filter){\n            reset();\n        }\n    },[products.filter]);\n\n    const ref:any = {\n        supplier            : React.useRef(null),\n        product             : React.useRef(null),\n        product_description : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        category            : React.useRef(null),\n        serial_number       : React.useRef(null),\n        warranty            : React.useRef(null),\n        warranty_start      : React.useRef(null),\n        warranty_end        : React.useRef(null),\n        status              : React.useRef(null),\n        delivery_date       : React.useRef(null),\n        reference_delivery_document : React.useRef(null),\n        created_by          : React.useRef(null),\n        remarks             : React.useRef(null),\n\n    };\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product             : null,\n        product_description : null,\n        supplier_name       : null,\n        category            : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n        status              : null,\n        delivery_date       : null,\n        reference_delivery_document : null,\n        created_by          : null,\n        remarks             : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product               = null;\n        a.product_description   = null;\n        a.supplier_name         = null;\n        a.category              = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        a.status                = null;\n        a.delivery_date         = null;\n        a.reference_delivery_document = null;\n        a.created_by            = null;\n        a.remarks               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        dispatch(ProductsParams({\n            ...products.params,\n            filter : {\n                ...products.params.filter,\n                [event.target.name] : {\n                    ...products.params.filter[event.target.name],\n                    key : event.target.value,\n                }\n            }\n        }));\n    }\n\n    const setFilterControl=(event:any) =>{\n        dispatch(ProductsParams({\n            ...products.params,\n            filter : {\n                ...products.params.filter,\n                [event.target.name] : {\n                    ...products.params.filter[event.target.name],\n                    filter : event.target.value,\n                }\n            }\n        }));\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        dispatch(ProductsParams({\n            ...products.params,\n            per_page    : 10,\n            page        : 1,\n        }));\n       \n\n        if(action === \"filter\"){\n            reset();\n            if(products.params.filter[control].key !== ''){\n                dispatch(Products());\n            }\n        }else{\n            if(products.params.filter[control].key !== ''){\n                dispatch(ProductsParams({\n                    ...products.params,\n                    filter : {\n                        ...products.params.filter,\n                        [control] : {\n                            ...products.params.filter[control],\n                            key : '',\n                        }\n                    }\n                }));\n                dispatch(Products());\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                dispatch(ProductsParams({\n                    ...products.params,\n                    filter : {\n                        ...products.params.filter,\n                        [e.target.name] : {\n                            ...products.params.filter[e.target.name],\n                            key : '',\n                        }\n                    }\n                }));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Products());\n            }\n        }\n    }\n\n\n    return(\n        products.filter ?\n            <TableRow>\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.supplier_code.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier\"\n                        value = {products.params.filter.supplier.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.supplier.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            \n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                                {products.params.filter.supplier.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")} disabled={products.params.filter.supplier.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.supplier_name.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier_name\"\n                        value = {products.params.filter.supplier_name.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier_name}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.supplier_name.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier_name\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                                {products.params.filter.supplier_name.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={products.params.filter.supplier_name.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.product_code.show}>\n                    \n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"product\"\n                        value = {products.params.filter.product.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"product\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.product}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.product)? \"simple-popper\" : undefined} open={Boolean(popper.product)} anchorEl={popper.product}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.product.filter}\n                                    onChange={setFilterControl}\n                                    name = \"product\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product\")}>\n                                {products.params.filter.product.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product\")} disabled={products.params.filter.product.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.product_name.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"product_description\"\n                        value = {products.params.filter.product_description.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.product_description}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.product_description.filter}\n                                    onChange={setFilterControl}\n                                    name = \"product_description\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                                {products.params.filter.product_description.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")} disabled={products.params.filter.product_description.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.category.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"category\"\n                        value = {products.params.filter.category.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"category\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.category}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.category)? \"simple-popper\" : undefined} open={Boolean(popper.category)} anchorEl={popper.category}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.category.filter}\n                                    onChange={setFilterControl}\n                                    name = \"category\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"category\")}>\n                                {products.params.filter.category.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"category\")} disabled={products.params.filter.category.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.serial.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"serial_number\"\n                        value = {products.params.filter.serial_number.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.serial_number}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.serial_number.filter}\n                                    onChange={setFilterControl}\n                                    name = \"serial_number\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                                {products.params.filter.serial_number.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")} disabled={products.params.filter.serial_number.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.warranty.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        type = \"number\"\n                        name = \"warranty\"\n                        value = {products.params.filter.warranty.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.warranty}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.warranty.filter}\n                                    onChange={setFilterControl}\n                                    name = \"warranty\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                                {products.params.filter.warranty.key === '' ?'Close' : 'Clear'}                                                    \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")} disabled={products.params.filter.warranty.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.warranty_start.show}>\n                    <DatePicker\n                        format=\"yyyy/MM/dd\"\n                        allowKeyboardControl\n                        animateYearScrolling\n                        variant = \"dialog\"\n                        className=\"input\"\n                        onChange = {(event) => dispatch(ProductsParams({\n                                ...products.params,\n                                filter : {\n                                    ...products.params.filter,\n                                    warranty_start : {\n                                        ...products.params.filter['warranty_start'],\n                                        key : moment(event).format(\"YYYY-MM-DD\"),\n                                    }\n                                }\n                            }))\n                        }\n                        value = {products.params.filter.warranty_start.key === '' ? null : moment(products.params.filter.warranty_start.key).format()}\n                        onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                        // cancelLabel = {<Button>Cancel</Button>}\n                        // okLabel = {<Button>OK</Button>}\n                        inputVariant=\"outlined\"\n                    />\n\n\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.warranty_start.filter}\n                                    onChange={setFilterControl}\n                                    name = \"warranty_start\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                                {products.params.filter.warranty_start.key === '' ?'Close' : 'Clear'}                             \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")} disabled={products.params.filter.warranty_start.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.warranty_end.show}>\n                    <DatePicker\n                        format=\"yyyy/MM/dd\"\n                        allowKeyboardControl\n                        animateYearScrolling\n                        variant = \"dialog\"\n                        className=\"input\"\n                        onChange = {(event) => dispatch(ProductsParams({\n                                    ...products.params,\n                                    filter : {\n                                        ...products.params.filter,\n                                        warranty_end : {\n                                            ...products.params.filter['warranty_end'],\n                                            key : moment(event).format(\"YYYY-MM-DD\"),\n                                        }\n                                    }\n                                })\n                            )}\n                        value = {products.params.filter.warranty_end.key === '' ? null : moment(products.params.filter.warranty_end.key).format()}\n                        onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                        // onKeyDown = {onKey}\n                        inputVariant=\"outlined\"\n                    />\n                    <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.warranty_end.filter}\n                                    onChange={setFilterControl}\n                                    name = \"warranty_end\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                                {products.params.filter.warranty_end.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")} disabled={products.params.filter.warranty_end.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.status.show}>\n                    {/* <FormControl variant=\"outlined\" style={{width:'100%'}}> */}\n                        <TextField\n                            value={products.params.filter.status.key}\n                            onChange={setText}\n                            name=\"status\"\n                            onFocus = {(event)=>controller(event,\"status\",\"open\")}\n                            variant=\"outlined\"\n                            select\n                            className=\"input\"\n                        >\n                            <MenuItem value={0}>All</MenuItem>\n                            <MenuItem value={1}>New</MenuItem>\n                            <MenuItem value={2}>Replaced</MenuItem>\n                            <MenuItem value={3}>Returned</MenuItem>\n                            <MenuItem value={4}>Repaired</MenuItem>                        \n                        </TextField>\n                    \n                    {/* </FormControl> */}\n                    <Popper className=\"text-center\" id={Boolean(popper.status)? \"simple-popper\" : undefined} open={Boolean(popper.status)} anchorEl={popper.status}>\n                        <Paper className=\"popper-paper\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,status:null})}>\n                                Close\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"status\")}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n      \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.delivery_date.show}>\n                    <DatePicker\n                        format=\"yyyy/MM/dd\"\n                        allowKeyboardControl\n                        animateYearScrolling\n                        variant = \"dialog\"\n                        className=\"input\"\n                        inputVariant=\"outlined\"\n                        onChange = {(event) => dispatch(ProductsParams({\n                                ...products.params,\n                                filter : {\n                                    ...products.params.filter,\n                                    delivery_date : {\n                                        ...products.params.filter['delivery_date'],\n                                        key : moment(event).format(\"YYYY-MM-DD\"),\n                                    }\n                                }\n                            }))\n                        }\n                        value = {products.params.filter.delivery_date.key === '' ? null : moment(products.params.filter.delivery_date.key).format()}\n                        onFocus = {(event)=>controller(event,\"delivery_date\",\"open\")}\n                    />\n\n\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.delivery_date)? \"simple-popper\" : undefined} open={Boolean(popper.delivery_date)} anchorEl={popper.delivery_date}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.delivery_date.filter}\n                                    onChange={setFilterControl}\n                                    name = \"delivery_date\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"delivery_date\")}>\n                                {products.params.filter.delivery_date.key === '' ?'Close' : 'Clear'}                             \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"delivery_date\")} disabled={products.params.filter.delivery_date.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.reference_delivery_document.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"reference_delivery_document\"\n                        value = {products.params.filter.reference_delivery_document.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"reference_delivery_document\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.reference_delivery_document}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.reference_delivery_document)? \"simple-popper\" : undefined} open={Boolean(popper.reference_delivery_document)} anchorEl={popper.reference_delivery_document}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.reference_delivery_document.filter}\n                                    onChange={setFilterControl}\n                                    name = \"reference_delivery_document\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"reference_delivery_document\")}>\n                                {products.params.filter.reference_delivery_document.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"reference_delivery_document\")} disabled={products.params.filter.reference_delivery_document.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.created_by.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"created_by\"\n                        value = {products.params.filter.created_by.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"created_by\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.created_by}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.created_by)? \"simple-popper\" : undefined} open={Boolean(popper.created_by)} anchorEl={popper.created_by}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.created_by.filter}\n                                    onChange={setFilterControl}\n                                    name = \"created_by\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"created_by\")}>\n                                {products.params.filter.created_by.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"created_by\")} disabled={products.params.filter.created_by.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.remarks.show}>\n                    <TextField\n                        \n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"remarks\"\n                        value = {products.params.filter.remarks.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"remarks\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.remarks}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.remarks)? \"simple-popper\" : undefined} open={Boolean(popper.remarks)} anchorEl={popper.remarks}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={products.params.filter.remarks.filter}\n                                    onChange={setFilterControl}\n                                    name = \"remarks\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"remarks\")}>\n                                {products.params.filter.remarks.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"remarks\")} disabled={products.params.filter.remarks.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n            </TableRow>\n        : null\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport { useSnackbar } from 'notistack';\nimport Close from '@material-ui/icons/Close';\n\ninterface Category{\n    \n    params : any,\n    open : any,\n    setOption : any,\n    setOpen : any,\n\n\n    value : string,\n}\n\nconst Category = (props:Category) => {\n\n    const categoryRequest:any = React.useRef();\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ error, setError ] = React.useState(false);\n    const [ message, setMessage ] = React.useState('');\n    const [category, setCategory ] = React.useState();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const handleClose = () => {\n        props.setOpen(!props.open);\n    }\n\n\n    // const handleOption = async () => {\n    //     const a = await categoryRequest.current.show(props.params);\n\n    //     let meta = a.data.meta;\n\n    //     let opti:any;\n\n    //     if(meta.total > meta.per_page){\n    //         let b =  await categoryRequest.current.show({per_page:meta.total,page:1});\n    //         opti = b.data.data;\n    //         props.params.page = 1;\n    //         props.params.per_page = meta.total; \n    //     }else{\n    //         setCategory(a.data.data);\n    //         opti = a.data.data;\n    //     }\n\n\n\n    //     let opt = opti.map((value:any) => {\n    //         return {\n    //             label : value.name,\n    //             value : value.id,\n    //             target: {\n    //                 name  : 'category',\n    //                 value : value.id \n    //             }\n    //         }\n    //     })\n\n    //     props.setOption(opt);\n    // }\n\n    const submitForm = async () => {\n        setError(false);\n        setSubmit(true);\n        if(category === ''){\n            setSubmit(false);\n            setError(true);\n            setMessage('Category name is required');\n            return;\n        }\n\n        let a = await categoryRequest.current.add({name:category});\n\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200 && !a.data.hasOwnProperty('status') ){\n                // handleOption();\n                handleClose();\n                enqueueSnackbar(\"Product category successfull added\",{variant:\"success\",action:actions});\n            }else{\n \n                if(a.status === 200 && a.data.hasOwnProperty('status')){\n                    setSubmit(false);\n                    setError(true);\n                    setMessage(a.data.message);\n                    return;\n                }else{\n                    enqueueSnackbar(\"Something went wrong. Please try again.\",{variant:\"error\",action:actions});\n                }\n            }\n        }\n\n        setSubmit(false);\n        setError(false);\n        setMessage('');\n    }\n\n    return(\n        <React.Fragment>\n            <Requests.Category request={categoryRequest} />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Category</DialogTitle>\n                <DialogContent >\n                    <TextField\n                        id=\"outlined-email-input\"\n                        label=\"Category Name\"\n                        // className={classes.textField}\n                        type=\"text\"\n                        name=\"category\"\n                        value = {category}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        defaultValue={props.value}\n                        onChange = {(event) => setCategory(event.target.value)}\n                        error = {error}\n                        helperText = {message}\n                        disabled={submit}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={handleClose} color=\"secondary\" variant=\"contained\">\n                        Cancel\n                    </Button>\n\n                    <Button disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>        \n            </Dialog>\n        </React.Fragment>\n    );\n\n}\n\nexport default Category;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\nimport './summaryStyle.scss';\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '100%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none',\n\n            \"&:focus\": {\n                outline: 'none'\n            }\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Add = (props:Add) => {\n\n    const categoryRequest:any = React.useRef();\n    const masterCodeRequest:any = React.useRef(); \n\n    const initError = {\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    }\n\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    const [input, setInput] = React.useState({\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState(initError);\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n    const [categoryValue,setCategoryValue] = React.useState('');\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            // queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const handleChangeText = (event:any) => {\n\n        setInput({\n            ...input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n\n    const loadOption = async(inputValue:string) => {\n\n        \n        let category =  await categoryRequest.current.show({search:inputValue});\n\n        return category.data.data.map((value:any)=>{\n            return{\n                value : value.id,\n                label : value.name,\n                target:{\n                    value : value.id,\n                    name : \"category\",\n                }\n            }\n        });\n    }\n\n    const submitForm = async (event:any) => {\n              \n        setError(initError); \n        setSubmit(true);  \n        event.preventDefault();\n    \n        let a = await masterCodeRequest.current.add(input);\n\n        console.log(a);\n\n        if(a.status === 200 && !a.data.hasOwnProperty('status')){\n            enqueueSnackbar(\"Successfully added Product Code\",{variant:\"success\",action:actions});\n            dispatch(MasterCodes());\n            props.handleClose();\n            setSubmit(false);\n            return;\n        }\n\n        if(a.status === 200 && a.data.hasOwnProperty('status')){\n            updateErrorState(a.data.errors);\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    \n    return (\n        <React.Fragment>\n            <Requests.Category request={categoryRequest} />\n            <Requests.MasterCodes request={masterCodeRequest} />\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n                value = {categoryValue}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Product</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div className={ error.category.error ? \"summary-select-wrapper has-error\" : \"summary-select-wrapper\"} > \n                            <label>Category</label>\n                            <AsyncCreatableSelect\n                                cacheOptions\n                                defaultOptions\n                                onChange = {handleChangeText}\n                                loadOptions ={(value) =>loadOption(value)}\n                                onCreateOption = {(inputValue)=>{\n                                    setCategoryValue(inputValue);\n                                    setCategoryHandler(true);\n                                }}\n                                required\n                                isDisabled={submit}\n                                classNamePrefix=\"summary-select\"\n                                className=\"summary-select-main\"\n                                maxMenuHeight={170}\n                            />\n                            <div hidden={!error.category.error} className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      );\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Close, Save, Today } from '@material-ui/icons';\nimport Select from 'react-select';\nimport {default as ProductCode} from '../Summary/Add';\nimport {Requests} from 'Services';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\nimport AsyncSelect from 'react-select/async'\n\n\n\ninterface Add{\n    modalAdd                    :   boolean,\n    updateInput                 :   any,\n    productInput                :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n    supplierState               :   any,\n    setProductInput             :   any,\n    params                      :   any,\n\n\n    setModalAdd(a:boolean)      :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\ntype inputAsync = \"product\" | \"supplier\";\n\nconst Add = (props:Add) => {\n\n    let status = [{\n                    label : 'New',\n                    value : 1,\n                    target: {\n                        name : 'status',\n                        value : 1,\n                    }\n                },{\n                    label : 'Replaced',\n                    value : 2,\n                    target: {\n                        name : 'status',\n                        value : 2,\n                    }\n                },{\n                    label : 'Returned',\n                    value : 3,\n                    target: {\n                        name : 'status',\n                        value : 3,\n                    }\n                },{\n                    label : 'Repaired',\n                    value : 4,\n                    target: {\n                        name : 'status',\n                        value : 4,\n                    }\n                }\n            ];\n\n    const productCodeRequest:any = React.useRef();\n    const supplierRequest:any = React.useRef();\n    const statusRequest:any = React.useRef();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n    React.useEffect( () => {\n        if(props.modalAdd){\n        }\n    },[props.modalAdd]);\n\n    const loadOptions = async (inputValue:any,inputAsync:inputAsync) => {\n        \n        switch(inputAsync){\n            case \"product\" :\n                let company = await productCodeRequest.current.show({search:inputValue});\n\n                return company.data.data.map((value:any)=>{\n                    return{\n                        value : value.id,\n                        label : value.product_code,\n                        target:{\n                            value : value.id,\n                            name : \"product\"\n                        }\n                    }\n                });\n            case \"supplier\" : \n                let model = await supplierRequest.current.show({search:inputValue});\n                \n                return model.data.data.map((value:any)=>{\n\n                    return{\n                        value : value.id,\n                        label : value.supplier_code+\" (\"+value.supplier_name+\")\",\n                        target:{\n                            value : value.id,\n                            name : \"supplier\"\n                        }\n                    }\n                });\n        }\n\n        \n    };\n\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n    \n    return(\n        props.modalAdd ?\n            <React.Fragment>\n                <Requests.Suppliers request={supplierRequest} />\n                <Requests.MasterCodes request={productCodeRequest} />\n                <Requests.Status request={statusRequest} />\n                <ProductCode open={openAddProduct} handleClose={handleProductAdd} />\n\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalAdd}\n                    onClose={ () =>props.setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                    className=\"dialog edit\"\n                >\n                    <DialogTitle style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"supplier\")}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                            />\n                                            <div hidden={!props.responseMessage.supplier.error} className=\"select-error-message\">{props.responseMessage.supplier.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncCreatableSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"product\")}\n                                                onCreateOption = {handleProductAdd}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} className=\"select-error-message\">{props.responseMessage.product.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select error\" : \"\" }\n                                                required\n                                            />\n\n                                            <div hidden={!props.responseMessage.status.error} className=\"select-error-message\">{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                                // defaultValue={new Date()}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty(month)\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                        </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        : null\n    );\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { Edit, Close } from '@material-ui/icons';\n\n\ninterface Show{\n    product       : any,\n    modalShow     : boolean,\n    user          : any,\n\n\n\n    initModalEdit() : void\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) => {\n\n    if(props.product){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () => props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog show\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper>\n                            <Table>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Supplier Code</TableCell>\n                                        <TableCell>{props.product.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Supplier Name</TableCell>\n                                        <TableCell>{props.product.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Product Code</TableCell>\n                                        <TableCell>{props.product.product.product_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Product Name</TableCell>\n                                        <TableCell>{props.product.product.product_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Category</TableCell>\n                                        <TableCell>{props.product.product.category.name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Serial Number</TableCell>\n                                        <TableCell>{props.product.serial_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Delivery Date</TableCell>\n                                        <TableCell>{moment(props.product.delivery_date).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Warranty</TableCell>\n                                        <TableCell>{props.product.warranty > 1 ? props.product.warranty + ' Months ' : props.product.warranty + \" Month\"}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Warranty Start</TableCell>\n                                        <TableCell>{moment(props.product.warranty_start).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>End Date</TableCell>\n                                        <TableCell>{moment(new Date(props.product.warranty_end)).format(\"LL\")}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Delivery Doc</TableCell>\n                                        <TableCell>{props.product.reference_delivery_document}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Created By</TableCell>\n                                        <TableCell>{props.product.created_by.first_name + \" \" + props.product.created_by.last_name}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Status</TableCell>\n                                        <TableCell>{\n                                            props.product.status === 1 ? 'New' :\n                                            props.product.status === 2 ? 'Replaced'  :\n                                            props.product.status === 3 ? 'Returned' : \"Repaired\"\n                                        }</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Remarks</TableCell>\n                                        <TableCell>{props.product.remarks}</TableCell>\n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() => props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n    \n}\n\n\nexport default Show;\n\n\n\n\n\n\n\n// import React from 'react';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import IconButton from '@material-ui/core/IconButton';\n// import Typography from '@material-ui/core/Typography';\n// import Slide from '@material-ui/core/Slide';\n// import { TransitionProps } from '@material-ui/core/transitions';\n// import { ArrowBack } from '@material-ui/icons';\n// import { Paper } from '@material-ui/core';\n\n\n// const Transition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n//   return <Slide direction=\"up\" ref={ref} {...props} />;\n// });\n\n\n// interface Show{\n//     product       : any,\n//     modalShow     : boolean,\n//     user          : any,\n\n//     initModalEdit() : void\n//     setModalShow(a:boolean) : void,\n// }\n\n// const Show = (props:Show) => {\n\n//     const [, setOpen] = React.useState(false);\n\n\n//     const handleClose = () => {\n//         props.setModalShow(!props.modalShow);\n//     };\n\n//     return (\n//         <div>\n//             {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//                 Open full-screen dialog\n//             </Button> */}\n//             <Dialog className=\"dialog fullscreen\" fullScreen open={props.modalShow} onClose={handleClose} TransitionComponent={Transition}>\n//                 <AppBar>\n//                     <Toolbar>\n//                         <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n//                             <ArrowBack />\n//                         </IconButton>\n//                         <Typography variant=\"h6\" className=\"dialog-title\">\n//                             Product Details\n//                         </Typography>\n//                         <Button autoFocus color=\"inherit\" onClick={handleClose}>\n//                             Save\n//                         </Button>\n//                     </Toolbar>\n//                 </AppBar>\n//                 <Paper>\n\n//                 </Paper>\n//             </Dialog>\n//         </div>\n//     );\n// }\n\n// export default Show;\n","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Close, Save, Today } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\nimport {Requests} from 'Services';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\nimport AsyncSelect from 'react-select/async'\n\n\n\ninterface Add{\n    modalEdit       : boolean,\n    updateInput     : any,\n    submit          : boolean,\n    responseMessage : any,\n    product         : any,\n    productInput    : any\n    params          :   any,\n\n    \n    submitForm(a:any, b:string) : void,\n    setModalEdit(a:boolean) : void,\n}\n\ntype inputAsync = \"product\" | \"supplier\";\n\nconst Edit = (props:Add) => {\n\n    let status = [{\n                    label : 'New',\n                    value : 1,\n                    target: {\n                        name : 'status',\n                        value : 1,\n                    }\n                },{\n                    label : 'Replaced',\n                    value : 2,\n                    target: {\n                        name : 'status',\n                        value : 2,\n                    }\n                },{\n                    label : 'Returned',\n                    value : 3,\n                    target: {\n                        name : 'status',\n                        value : 3,\n                    }\n                },{\n                    label : 'Repaired',\n                    value : 4,\n                    target: {\n                        name : 'status',\n                        value : 4,\n                    }\n                }\n            ];\n\n    const productCodeRequest:any = React.useRef();\n    const supplierRequest:any = React.useRef();\n    const statusRequest:any = React.useRef();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n    \n    const [preProduct,setPreProduct] = React.useState(null);\n    const [preSupplier,setPreSupplier] = React.useState(null);\n\n\n\n    React.useEffect(()=>{\n        if(props.modalEdit){\n            loadPreValues();\n        }\n    },[props.modalEdit]);\n\n    const loadPreValues = async () => {\n        let supplier = await supplierRequest.current.get(props.productInput.supplier);\n        let product = await productCodeRequest.current.get(props.productInput.product);\n\n        setPreSupplier({\n            value : supplier.data.data.id,\n            label : supplier.data.data.supplier_code+\" (\"+supplier.data.data.supplier_name+\")\",\n            target : {\n                value : supplier.data.data.id,\n                name  : \"supplier\"\n            }\n        });\n        \n        setPreProduct({\n            value : product.data.data.id,\n            label : product.data.data.product_code,\n            target : {\n                value : product.data.data.id,\n                name  : \"product\"\n            }\n        });\n\n        \n    }\n    \n\n\n    const loadOptions = async (inputValue:any,inputAsync:inputAsync) => {\n\n        switch(inputAsync){\n            case \"product\" :\n                let company = await productCodeRequest.current.show({search:inputValue});\n\n                return company.data.data.map((value:any)=>{\n                    return{\n                        value : value.id,\n                        label : value.product_code,\n                        target:{\n                            value : value.id,\n                            name : \"product\"\n                        }\n                    }\n                });\n            case \"supplier\" : \n                let model = await supplierRequest.current.show({search:inputValue});\n                \n                return model.data.data.map((value:any)=>{\n\n                    return{\n                        value : value.id,\n                        label : value.supplier_code+\" (\"+value.supplier_name+\")\",\n                        target:{\n                            value : value.id,\n                            name : \"supplier\"\n                        }\n                    }\n                });\n        }\n\n        \n    };\n\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n    \n    return(\n        props.modalEdit ?\n            <React.Fragment>\n                <Requests.Suppliers request={supplierRequest} />\n                <Requests.MasterCodes request={productCodeRequest} />\n                <Requests.Status request={statusRequest} />\n                <ProductCode open={openAddProduct} handleClose={handleProductAdd} />\n\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalEdit}\n                    onClose={ () =>props.setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                    className=\"dialog edit\"\n                >\n                    <DialogTitle style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"supplier\")}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                                value={preSupplier}\n                                            />\n                                            <div hidden={!props.responseMessage.supplier.error} className=\"select-error-message\">{props.responseMessage.supplier.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncCreatableSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"product\")}\n                                                onCreateOption = {handleProductAdd}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                                value={preProduct}\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} className=\"select-error-message\">{props.responseMessage.product.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                // defaultValue = {options[0]}\n                                                value = {status.find((element:any) => element.value === props.productInput.status)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select error\" : \"\" }\n                                                required\n\n                                            />\n\n                                            <div hidden={!props.responseMessage.status.error} className=\"select-error-message\">{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                                // defaultValue={new Date()}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty(month)\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                        </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        : null\n    );\n}\n\nexport default Edit;","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport {ProductsTable} from 'Redux/Actions';\nimport { Fade, Paper, Typography, List, ListItemText, ListItem, Checkbox, ListItemSecondaryAction } from '@material-ui/core';\n\ninterface TableOrder{\n    anchor      : HTMLButtonElement | null,\n    open        : boolean,\n    setOpen     : any\n}\n\n\nconst TableOrder = (props:TableOrder)=>{\n    const table = useSelector((state:any) => state.Products.table);\n    const dispatch = useDispatch();\n\n\n    const handleToggle = (value:any) => (event:any) => {        \n        // console.log(value);\n        \n        dispatch(ProductsTable({\n            ...table,\n            [value] : {\n                ...table[value],\n                show : !table[value].show\n            }\n        }));\n    }\n\n\n    return(\n        <Popover \n            open={props.open}\n            onClose={()=>props.setOpen(false)}\n            anchorEl={props.anchor} \n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n            className=\"table-order-container\"\n        >\n            <Paper className=\"table-order\">\n                <div className=\"title\">\n                    Table Display\n                </div>\n\n                <List dense>\n                    {\n                        Object.keys(table).map((value) =>(\n                            <ListItem key={value}>\n                                <ListItemText primary={table[value].name} />\n                                <ListItemSecondaryAction>\n                                    <Checkbox \n                                        checked={table[value].show} \n                                        inputProps={{'aria-label':'primary checkbox'}}\n                                        onClick = {handleToggle(value)}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </Paper>\n      </Popover>\n    )\n}\n\nexport default TableOrder;","import React from 'react';\nimport { Dialog, DialogContent, Button, Paper, IconButton, LinearProgress } from '@material-ui/core';\nimport './upload.style.scss';\nimport { Close } from '@material-ui/icons';\nimport {useSnackbar} from \"notistack\";\nimport tus from 'tus-js-client';\nimport { Requests } from 'Services';\nimport Url from 'Services/ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {Notifications}  from 'Redux/Actions';\n\ninterface Upload{\n    open : boolean,\n    setOpen(a:boolean) : void,\n    type : \"masterfile\" | \"product\" | \"supplier\"\n}\n\n\nlet newFileName = \"\";\nconst Upload = (props:Upload) => {\n\n    const notify:any = React.useRef();\n    const dragDiv = React.useRef(null);\n    const input = React.useRef(null);\n    const {enqueueSnackbar,closeSnackbar} = useSnackbar();\n    const [status,setStatus] = React.useState({\n        uploading   : false,\n        percent     : 0,\n    });\n    const dispatch = useDispatch();\n\n    const dragAndDrop = (event:any) => {\n        event.preventDefault();\n\n        switch(event.type){\n            case \"change\" :\n                processFileList(event.target.files);\n                return;\n            case \"dragover\" :\n                dragDiv.current.classList.add(\"active\");\n                return;\n            case \"drop\" :\n                dragDiv.current.classList.remove(\"active\");\n                processFileList(event.dataTransfer.files);\n                return;\n            default:\n                dragDiv.current.classList.remove(\"active\");\n                return;                \n        }\n    }\n\n    const action = (key:any) => (\n        <Button variant=\"text\" color=\"inherit\" onClick={ () => closeSnackbar(key)}>\n            <Close />\n        </Button>\n    );\n\n    const processFileList = (data:FileList) => {\n        if(data.length !== 0){\n            let extension = data[0].name.split('.').pop();\n            \n            if(extension === \"xlsx\" || extension === \"xls\"){\n                \n                newFileName = generateRandomFileName(data[0].name);\n                setStatus({\n                    ...status,\n                    uploading : true,\n                })\n                uploadToServer(data[0]);\n                return;\n            }else{\n                enqueueSnackbar('Invalid file, please try again!!!',{\n                    variant:\"error\",\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action : action\n                });\n            }\n        }\n    };\n\n\n    const uploadToServer = (file:any) => {\n        var upload:any = new tus.Upload(file, {\n            endpoint: Url.file,\n            retryDelays: [0, 3000, 5000, 10000, 20000],\n            resume : false,\n            chunkSize : 1000000,\n            metadata: {\n                filename: newFileName,\n                filetype: file.type\n            },\n            onError: () => {\n                enqueueSnackbar('Something went wrong, please try again!!',{\n                    variant:\"error\",\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action : action\n                });\n\n                setStatus({\n                    ...status,\n                    uploading : false,\n                })\n            },\n            onProgress: (bytesUploaded, bytesTotal) => {\n\n                // console.log(bytesTotal);\n                setStatus({\n                    uploading   :   true,\n                    percent     :   parseInt((bytesUploaded / bytesTotal * 100).toFixed(2),10)\n                })\n            },\n            onSuccess: () => {\n                \n                notify.current.add({\n                    filename    : newFileName,\n                    type        : props.type, \n                });\n                dispatch(Notifications({per_page:10,page:1}));\n\n                enqueueSnackbar('File successfully uploaded!!!',{\n                    variant:\"success\",\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action : action\n                });\n\n                // console.error(\"redux here\");\n                props.setOpen(false);\n                setStatus({\n                    ...status,\n                    uploading:false\n                })\n            }\n        })\n     \n        // Start the upload\n        upload.start();\n    };\n\n\n    const generateRandomFileName = (name:string) =>{\n        let extension = name.slice((name.lastIndexOf(\".\") - 1 >>> 0) + 1);\n        let filename = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)+Math.random().toString(36).substring(2, 15);\n        return filename+extension;\n    }\n\n    return(\n         <React.Fragment>\n            <Requests.Notification request={notify} />\n            <Dialog\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={ () => props.setOpen(false)}\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"upload\"\n                disableBackdropClick\n            >\n                {/* <DialogTitle>Upload File</DialogTitle> */}\n                <DialogContent>\n                    {\n                        status.uploading ?\n                            <Paper className=\"uploading\">\n                                <LinearProgress variant=\"determinate\" value={status.percent} />\n                                <b>Uploading({status.percent})</b>\n                            </Paper>\n                        \n                        :\n                            <Paper\n                                onDragEnter={dragAndDrop} \n                                onDragLeave={dragAndDrop} \n                                onDragOver ={dragAndDrop} \n                                onDrop     ={dragAndDrop}\n                            >\n                                <div className=\"start\" ref={dragDiv}>\n                                    <Button onClick={()=>input.current.click()} variant=\"contained\" color=\"secondary\"> browse </Button>\n                                    <input ref={input} hidden accept=\".xlsx, .xls\" type=\"file\" onChange={dragAndDrop} />\n                                    <i>&nbsp;&nbsp;or drop files here</i>\n                                </div>\n                            </Paper>\n                    }\n                    <IconButton hidden={status.uploading} onClick={()=>props.setOpen(false)} className=\"close-upload\" color=\"primary\">\n                        <Close />\n                    </IconButton>\n                </DialogContent>\n            \n            </Dialog>\n        </React.Fragment>\n    );\n}\n\nexport default Upload;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Table, TableBody, TableRow, TableCell, TablePagination, TableHead, Button, Fab } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { \n    Products as productRedux,\n    ProductsFilter ,\n    ProductsParams , \n    Filter as Filterer,\n    NavigationTitle,\n    \n} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, CloudUpload, FilterList, ViewColumn, Cached } from '@material-ui/icons';\nimport moment from 'moment';\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Show from './Show';\nimport Edit from './Edit';\nimport TableOrder from './TableOrder';\nimport Upload from 'Components/Upload';\n\nconst Products = (props:any) =>{\n\n    const productsRequest:any = React.useRef();\n    const initErrroMessage = {\n        id                          : {error:false,message:''},\n        supplier                    : {error:false,message:''},\n        product                     : {error:false,message:''},\n        delivery_date               : {error:false,message:''},\n        reference_delivery_document : {error:false,message:''},\n        serial_number               : {error:false,message:''},\n        warranty                    : {error:false,message:''},\n        warranty_start              : {error:false,message:''},\n        status                      : {error:false,message:''},\n        remarks                     : {error:false,message:''},\n    };\n    \n    const initProductInput = {\n        id                  : '',\n        supplier            : '',\n        product             : '',\n        delivery_date       : '',\n        reference_delivery_document : '',\n        serial_number       : '',\n        warranty            : '',\n        warranty_start      : '',\n        status              : '',\n        remarks             : '',\n    \n    }\n\n\n\n\n    // const [ params, setParams ] = React.useState(initParams);\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState(null);   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState(false);\n    // const [filter, setFilter] = React.useState(initFilter);\n    const [ productCodeParam, setProductCodeParam ] = React.useState();\n    const [tableAnchor,setTableAnchor] = React.useState<HTMLButtonElement | null>(null);\n    const [tableOpen, setTableOpen] = React.useState(false);\n\n\n   \n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n    const user  = useSelector( (state:any) => state.UserAccount.data);\n    // const filterSwitch = useSelector( (state:any) => state.Products.filter);\n    const dispatch = useDispatch();\n\n\n    const products =  useSelector( (state:any) => state.Products);\n\n    useEffect(()=>{\n    \n        dispatch(NavigationTitle({control:'products'}));    \n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[props]);\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage(initErrroMessage);\n    };\n\n    \n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        dispatch(ProductsParams({\n            ...products.params,\n            page : newPage+1\n        }));\n        dispatch(productRedux());\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(ProductsParams({\n            ...products.params,\n            page : 1,\n            per_page : event.target.value,\n        }));\n        dispatch(productRedux());\n    };\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                // uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n        const tableCell:any = [];\n        let counter=0;\n        \n        Object.keys(products.table).forEach((value:any)=>{\n            if(products.table[value].show){\n                counter=counter+1;\n                tableCell.push(<TableCell key={counter} align=\"right\"><Skeleton variant=\"rect\" width={'100%'} height={20} /></TableCell>)\n            }\n        })\n        \n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : moment(today).format('MM/DD/YYYY'),\n            warranty_start     : moment(today).format('MM/DD/YYYY'),\n        });\n\n        resetError();\n        setModalAdd(true);\n    }\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n        setModalShow(true);\n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('MM/DD/YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product                     : product.product.id,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n            status                      : product.status,\n            remarks                     : product.remarks,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n        event.persist(); \n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await productsRequest.current.update(productInput).then( \n                    (response:any) =>{\n                        if(response.status === 200 && !response.data.hasOwnProperty('status')){\n                            enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                            setModalEdit(false);\n                            dispatch(productRedux());\n                        }\n                        if(response.status === 200 && response.data.hasOwnProperty('status')){\n                            enqueueSnackbar('Update product failed!!',{variant:'error',action:actions});\n                            updateErrorState(response.data.errors);\n                        }\n                    }   \n                )\n\n                break;\n            case \"add\" :\n                await productsRequest.current.add(productInput).then( \n                    (response:any) =>{\n                        if(response.status === 200 && !response.data.hasOwnProperty('status')){\n                            enqueueSnackbar('Product successfully added!!!',{variant:'success',action:actions});\n                            setModalAdd(false);\n                            dispatch(productRedux());\n                        }else{\n                            enqueueSnackbar('Add new product failed!!',{variant:'error',action:actions});\n                            updateErrorState(response.data.errors);\n                        }\n                    }\n                )\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n\n    const status = (stat:any) => {\n        switch(stat){\n            case 1 : \n                return \"New\";\n            case 2 :\n                return \"Replaced\";\n            case 3 : \n                return \"Returned\";\n            case 4 :\n                return \"Repaired\";\n        }\n    }\n\n\n    const handleSort = (name:string) => {\n\n        let tables = products.table;\n\n        // Object.keys(products.table).forEach((values:any)=>{\n            \n\n        //     if(values === name){\n        //         if(products.table[name].asc === null || products.table[name].asc === false){\n\n        //             tables[name].asc=true;\n        //         }else{\n        //             tables[name].asc=false;\n        //         }\n        //     }else{\n        //         tables[name].asc=null;\n        //     }\n\n        //     console.log(tables[name].asc,name);\n        // });\n\n        // console.log(tables[name]);\n\n\n        console.error('To be continued');\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        \n        setResponseMessage(holder);\n    }\n\n\n    return(\n        <React.Fragment>\n            <Requests.Products request={productsRequest} />\n            <TableOrder open={tableOpen} setOpen={setTableOpen} anchor={tableAnchor} />\n\n            <Edit\n                modalEdit       = {modalEdit}\n                updateInput     = {updateInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                productInput    = {productInput}\n                product         = {product}\n                submitForm      = {submitForm}\n                setModalEdit    = {setModalEdit}\n                params          = {productCodeParam}\n            />\n            <Add \n                modalAdd        = {modalAdd}\n                setModalAdd     = {setModalAdd}\n                updateInput     = {updateInput}\n                productInput    = {productInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                supplierState   = {supplierState}\n                submitForm      = {submitForm}\n                setProductInput = {setProductInput}\n                params          = {productCodeParam}\n            />\n            <Show \n                product       = {product}\n                modalShow     = {modalShow}\n                user          = {user}\n                initModalEdit = {initModalEdit}\n                setModalShow  = {setModalShow}\n            />\n            <Upload\n                open      = {upload}\n                setOpen   = {setUpload}\n                type      = \"product\"\n            />\n            \n            {/* {uploadFileModal()} */}\n            <Paper className=\"paper-table main-content\">\n                <div className=\"header\">\n                    <div className=\"title\">Products</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" disabled={products.status!==\"done\"} className={products.status === \"done\" ? \"rotate pause\":\"rotate\" } onClick={()=>dispatch(productRedux())} color=\"primary\" >\n                            <Cached />\n                        </Fab>\n                        <Fab size=\"small\" color=\"primary\" onClick={()=>{\n                                dispatch(ProductsFilter(!products.filter));\n                                // setFilter(initFilter);\n                            }} >\n                            <FilterList />\n                        </Fab>\n                        <Fab size=\"small\" color=\"primary\" onClick={(event:any)=>{\n                            setTableAnchor(event.currentTarget);\n                            setTableOpen(!tableOpen);\n                        }}>\n                            <ViewColumn />\n                        </Fab>\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell onClick={()=>handleSort(\"supplier_code\")} className={products.table.supplier_code.asc !== null ? \"sticky-header pointer selected-columns\" : \"sticky-header pointer\"} align=\"center\" hidden={!products.table.supplier_code.show}>Supplier Code</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.supplier_name.show}>Supplier Name</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.product_code.show}>Product Code</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.product_name.show}>Product Name</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.category.show}>Category</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.serial.show}>Serial Number</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.warranty.show}>Warranty</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.warranty_start.show}>Warranty Start</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.warranty_end.show}>End Date</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.status.show}>Status</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.delivery_date.show}>Delivery Date</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.reference_delivery_document.show}>Delivery Document</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.created_by.show}>Created By</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.remarks.show}>Remarks</TableCell> \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n                        {\n                            products.data ?\n                                products.data.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} className=\"pointer\" onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\"     title={key.supplier.supplier_code}                          hidden={!products.table.supplier_code.show} >{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\"     title={key.supplier.supplier_name}                          hidden={!products.table.supplier_name.show} >{key.supplier.supplier_name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.product.product_code}                            hidden={!products.table.product_code.show} >{key.product.product_code}</TableCell>\n                                        <TableCell align=\"left\"     title={key.product.product_name}                            hidden={!products.table.product_name.show} >{key.product.product_name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.product.category.name}                           hidden={!products.table.category.show} >{key.product.category.name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.serial_number}                                   hidden={!products.table.serial.show} >{key.serial_number}</TableCell>\n                                        <TableCell align=\"left\"     title={key.warranty}                                        hidden={!products.table.warranty.show} >{key.warranty}</TableCell>\n                                        <TableCell align=\"left\"     title={moment(new Date(key.warranty_start)).format(\"ll\")}   hidden={!products.table.warranty_start.show} >{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\"     title={moment(new Date(key.warranty_end)).format(\"ll\")}     hidden={!products.table.warranty_end.show} >{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\"     title={status(key.status)}                                  hidden={!products.table.status.show} >{status(key.status)}</TableCell>\n                                        <TableCell align=\"left\"     title={moment(new Date(key.delivery_date)).format(\"ll\")}    hidden={!products.table.delivery_date.show} >{moment(new Date(key.delivery_date)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\"     title={key.reference_delivery_document}                     hidden={!products.table.reference_delivery_document.show} >{key.reference_delivery_document}</TableCell>\n                                        <TableCell align=\"left\"     title={key.created_by.first_name+\" \"+key.created_by.last_name}                           hidden={!products.table.created_by.show} >{key.created_by.first_name+\" \"+key.created_by.last_name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.remarks}                                         hidden={!products.table.remarks.show} >{key.remarks}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                </Table>\n                </div>\n\n                <div className=\"footer\">\n                    { \n                        user.level !== 3 ?\n                            <React.Fragment>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>    \n                                        \n                                {/* <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/> */}\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={()=>{\n                                        // event.persist();\n                                        // file.click()\n                                        setUpload(true);\n                                    }}\n                                    className = \"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                    </Button>\n                            </React.Fragment>\n                        : ''\n                    }\n                    \n                    <TablePagination\n                        rowsPerPageOptions={[10,25,50,100]}\n                        colSpan={0}\n                        component=\"div\"\n                        count={products.data ? products.data.data.meta.total : 10}\n                        rowsPerPage={products.params.per_page}\n                        page={products.data ? products.params.page-1: 0}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={(handleChangeRowsPerPage)}\n                        ActionsComponent={TablePaginationActions}\n                        className=\"custom-pagination\"\n                    />\n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, Fab } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport moment from 'moment';\nimport {NavigationTitle,LogsParams,Filter as Filterer,Logs} from \"Redux/Actions\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { Cached } from '@material-ui/icons';\n\nconst Reports = ( ) => {\n\n    const logs = useSelector((state:any)=>state.Logs);\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({control:'reports'}));\n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[]);\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [modal,setModal] = React.useState(null);\n    const [target,setTarget] = React.useState(null);\n\n\n    const handleChangePage = (event:any, newPage:any) => {\n        let pams:any = logs.params;\n        pams.page=newPage+1;\n        dispatch(LogsParams(pams));\n        dispatch(Filterer(null,\"logs\",pams));\n\n    };\n    \n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n        dispatch(LogsParams(paran));\n        dispatch(Filterer(null,\"logs\",paran))\n    };\n\n    \n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={'100%'} height={20}  /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModal = (data:any,target:any) => {\n        setModal(data);\n        setOpen(true);\n        setTarget(target);\n    }\n\n    const dataModal = () => {\n\n        const ProductMasterList = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.category.name}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n        \n        const user = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">User Name</TableCell>\n                        <TableCell >{data.username}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Name</TableCell>\n                        <TableCell >{data.first_name+\" \"+data.last_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Company</TableCell>\n                        <TableCell >{data.company}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Level</TableCell>\n                        <TableCell >{data.level.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Activated</TableCell>\n                        <TableCell >{parseInt(data.activated) === 1 ? \"Yes\" : \"No\"}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const supplier = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Name</TableCell>\n                        <TableCell >{data.supplier_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">TIN</TableCell>\n                        <TableCell >{data.tin}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Address</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact Person</TableCell>\n                        <TableCell >{data.contact_person}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact No.</TableCell>\n                        <TableCell >{data.contact_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const product = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product.product_name}</TableCell>\n                    </TableRow>\n                    {/* <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow> */}\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Serial Number</TableCell>\n                        <TableCell >{data.serial_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Date</TableCell>\n                        <TableCell >{moment(data.delivery_date).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty</TableCell>\n                        <TableCell >{data.warranty+\" Month(s)\"}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty Start</TableCell>\n                        <TableCell >{moment(data.warranty_start).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">End Date</TableCell>\n                        <TableCell >{moment(data.warranty_end).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Doc</TableCell>\n                        <TableCell >{data.reference_delivery_document}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Status</TableCell>\n                        <TableCell >{data.status.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Remarks</TableCell>\n                        <TableCell >{data.remarks}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n\n        return (\n            <React.Fragment>\n            {\n                modal ?\n                    <Dialog\n                        // fullWidth={fullWidth}\n                        // maxWidth=\"sm\"\n                        open={open}\n                        onClose={() => setOpen(false)}\n                        aria-labelledby=\"max-width-dialog-title\"\n                        className=\"modal-history\"\n                        disablePortal = {true}\n                    >\n                        <DialogTitle>History</DialogTitle>\n                        <DialogContent>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {\n                                        target === \"Product\"  ? product(modal)    :\n                                        target === \"Supplier\" ? supplier(modal)   : \n                                        target === \"User\"     ? user(modal)       : \n                                        target === \"ProductMasterList\" ? ProductMasterList(modal) : \"\"\n                                    }\n                                </TableBody>\n                            </Table>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant=\"contained\" color=\"primary\" onClick={ () => setOpen(false)}>\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </Dialog> \n                :\n\n                ''\n            }\n            </React.Fragment>\n\n            \n        );\n    }\n\n\n    \n\n    \n\n\n\n    return(\n        <div>\n            {dataModal()}\n            <Paper style={{whiteSpace:'nowrap'}} className=\"paper-table main-content\">\n                <div className=\"header\">\n                    <div className=\"title\">User Activities</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" disabled={logs.status!==\"done\"} className={logs.status === \"done\" ? \"rotate pause\":\"rotate\" } onClick={()=>dispatch(Logs())} color=\"primary\" >\n                                <Cached />\n                        </Fab>\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\">Date</TableCell>\n                                <TableCell className=\"sticky-header\">Name</TableCell>\n                                <TableCell className=\"sticky-header\">Action</TableCell>\n                                <TableCell className=\"sticky-header\">Target</TableCell>\n                                <TableCell className=\"sticky-header\">Previous</TableCell>\n                                <TableCell className=\"sticky-header\">Update</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                logs.data ?\n                                logs.data.data.data.map( (value:any) =>\n                                    <TableRow key={value.id} hover>\n                                        <TableCell>{moment(value.updated_at).format('ll, h:mm a')}</TableCell>\n                                        <TableCell style={{textTransform:'uppercase'}}>{value.user.first_name+\" \"+value.user.last_name}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.action}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.target}</TableCell>\n                                        <TableCell>\n                                            {\n                                                value.previous ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.previous,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                                value.update ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.update,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                                \n                                :\n                                skeletonTable()\n                            }\n                            \n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[10,25,50,100]}\n                    component=\"div\"\n                    count={logs.data ? logs.data.data.meta.total : 10}\n                    rowsPerPage={logs.params.per_page}\n                    page={logs.data ? logs.params.page-1 : 0}\n                    backIconButtonProps={{\n                        'aria-label': 'previous page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'next page',\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n} \n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport {Filter as Filterer,SuppliersParams,Suppliers} from \"Redux/Actions\";\nimport {useDispatch,useSelector} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n    const supplier = useSelector((state:any)=>state.Suppliers)\n    \n    const ref:any = {\n        supplier_code       : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        address             : React.useRef(null),\n        contact_person      : React.useRef(null),\n        contact_number      : React.useRef(null),\n        email               : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const reset = () => {\n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        dispatch(SuppliersParams({\n            ...supplier.params,\n            filter : {\n                ...supplier.params.filter,\n                [event.target.name] : {\n                    ...supplier.params.filter[event.target.name],\n                    key : event.target.value,\n                }\n            }\n        }));\n    }\n\n    const setFilterControl=(event:any) =>{\n        dispatch(SuppliersParams({\n            ...supplier.params,\n            filter : {\n                ...supplier.params.filter,\n                [event.target.name] : {\n                    ...supplier.params.filter[event.target.name],\n                    filter : event.target.value,\n                }\n            }\n        }));\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        dispatch(SuppliersParams({\n            ...supplier.params,\n            per_page    : 10,\n            page        : 1,\n        }));\n\n        if(action === \"filter\"){\n            reset();\n            if(supplier.params.filter[control].key !== ''){\n                dispatch(Suppliers());\n            }\n        }else{\n            if(supplier.params.filter[control].key !== ''){\n                dispatch(SuppliersParams({\n                    ...supplier.params,\n                    filter : {\n                        ...supplier.params.filter,\n                        [control] : {\n                            ...supplier.params.filter[control],\n                            key : '',\n                        }\n                    }\n                }));\n                dispatch(Suppliers());\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                dispatch(SuppliersParams({\n                    ...supplier.params,\n                    filter : {\n                        ...supplier.params.filter,\n                        [e.target.name] : {\n                            ...supplier.params.filter[e.target.name],\n                            key : '',\n                        }\n                    }\n                }));\n                dispatch(Suppliers());\n\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Suppliers());\n            }\n        }\n    }\n\n    return(\n        supplier.filter ?\n            <TableRow>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier_code\"\n                        value = {supplier.params.filter.supplier_code.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier_code}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={supplier.params.filter.supplier_code.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier_code\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                                {supplier.params.filter.supplier_code.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")} disabled={supplier.params.filter.supplier_code.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\">\n                    \n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier_name\"\n                        value = {supplier.params.filter.supplier_name.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier_name}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={supplier.params.filter.supplier_name.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier_name\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                                {supplier.params.filter.supplier_name.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={supplier.params.filter.supplier_name.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"address\"\n                        value = {supplier.params.filter.address.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.address}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={supplier.params.filter.address.filter}\n                                    onChange={setFilterControl}\n                                    name = \"address\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                                {supplier.params.filter.address.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")} disabled={supplier.params.filter.address.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"contact_person\"\n                        value = {supplier.params.filter.contact_person.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.contact_person}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={supplier.params.filter.contact_person.filter}\n                                    onChange={setFilterControl}\n                                    name = \"contact_person\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                                {supplier.params.filter.contact_person.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")} disabled={supplier.params.filter.contact_person.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"contact_number\"\n                        value = {supplier.params.filter.contact_number.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.contact_number}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={supplier.params.filter.contact_number.filter}\n                                    onChange={setFilterControl}\n                                    name = \"contact_number\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                                {supplier.params.filter.contact_number.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")} disabled={supplier.params.filter.contact_number.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"email\"\n                        value = {supplier.params.filter.email.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.email}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={supplier.params.filter.email.filter}\n                                    onChange={setFilterControl}\n                                    name = \"email\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                                {supplier.params.filter.email.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={supplier.params.filter.email.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n            </TableRow>\n        : null\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\n\ninterface Add{\n    modalAdd                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalAdd(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\n\nconst Add  = (props:Add) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalAdd}\n            onClose={ () =>props.setModalAdd(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n            className=\"dialog edit\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact No.\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                        \n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions> {/*className=\"product-modal-footer\"*/}\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"add\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                </Button>\n        \n                <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\ninterface Edit{\n    modalEdit                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalEdit(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Edit = (props:Edit) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalEdit}\n            onClose={ () =>props.setModalEdit(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n            className=\"dialog edit\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions className=\"product-modal-footer\">\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"edit\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                </Button>\n                <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface Show{\n    supplier                : any,\n    modalShow               : boolean,\n    user                    : any,\n    \n    initModalEdit()         : void,\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) =>{\n\n    if(props.supplier){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog show\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper>\n                            <Table>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Supplier Code</TableCell>\n                                        <TableCell>{props.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Supplier Name</TableCell>\n                                        <TableCell>{props.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>TIN</TableCell>\n                                        <TableCell>{props.supplier.tin}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Address</TableCell>\n                                        <TableCell title={props.supplier.address}>{props.supplier.address}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Contact Person</TableCell>\n                                        <TableCell>{props.supplier.contact_person}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Contact No.</TableCell>\n                                        <TableCell>{props.supplier.contact_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Email</TableCell>\n                                        <TableCell>{props.supplier.email}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n};\n\n\nexport default Show;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { \n    NavigationTitle,\n    Suppliers as supplierAction,\n    SuppliersFilter,\n    SuppliersParams, \n    Filter as Filterer \n} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogContent, CircularProgress, Fab } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Close, CloudUpload, FilterList, Cached } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport Show from './Show';\nimport Upload from 'Components/Upload';\n\n\n\nconst Suppliers = (props:any) => {\n\n    const supplierRequest:any = React.useRef();\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n    \n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState(null);\n    const [ upload,setUpload ] = React.useState(false);\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers ); \n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({title : 'Suppliers', control:'suppliers' }));\n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[props]);\n\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={'100%'} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    ); \n\n    // const uploadFile = () => {\n    //     togglePointerEvents(false)\n\n    //     if(file.files.length !== 0){\n    //         const selectedFile = file.files[0];\n    //         let filename = selectedFile.name.split('.').pop();\n            \n    //         if( !(filename === 'xls' || filename === 'xlsx')) {\n    //             enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n    //             return;\n    //         }else{\n    //             uploadSheet(selectedFile);\n    //         }\n    //     }\n        \n    // }\n\n\n    // const uploadSheet = async (file:File) => {\n\n    //     setUpload({\n    //         ...upload,\n    //         uploading : true,\n    //     });\n\n    //     let response = await supplierRequest.current.addFile(file);\n\n    //     switch(response.status){\n    //         case 406 :\n    //             enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n    //             setUpload({\n    //                 ...upload,\n    //                 uploading : false,\n    //             });\n    //             return;\n    //         case 200 :\n\n    //             enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n    //             togglePointerEvents(true);\n    //             dispatch(Filterer(filter,\"supplier\",params));\n\n    //             setUpload({\n    //                 open      : true,\n    //                 uploading : false,\n    //                 result    : response.data\n    //             });\n\n    //             return;\n    //         default :\n    //             enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n\n    //             setUpload({\n    //                 ...upload,\n    //                 uploading : false,\n    //             });\n    //             return;\n    //     }\n    // }\n\n    // const uploadFileModal = () =>{\n    //     if(upload.uploading){\n    //         return (\n    //             <Dialog\n    //                 maxWidth=\"xs\"\n    //                 open={upload.uploading}\n    //                 disableBackdropClick\n    //                 className=\"uploading-processing\"\n    //             >\n    //                 <DialogContent>\n    //                     <div>\n    //                         <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n    //                             <CircularProgress />\n    //                         </div>\n    //                         <div className=\"status-submit-upload\">\n    //                             Uploading\n    //                         </div>\n    //                     </div>\n    //                 </DialogContent>\n    //             </Dialog>\n    //         );\n    //     }else{\n    //         return null;\n    //     }\n    // }\n\n    const resetError = () => {\n        setResponseMessage(initSupplierError);\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) =>{\n        dispatch(SuppliersParams({\n            ...supplierState.params,\n            page : newPage+1,\n        }));\n        dispatch(supplierAction());\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(SuppliersParams({\n            ...supplierState.params,\n            per_page : event.target.value,\n            page     : 1 \n        }));\n        dispatch(supplierAction());\n    };\n\n    const updateInput = (event:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    type action = \"edit\" | \"add-file\" | \"add\";\n\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await supplierRequest.current.update(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200 && !response.data.hasOwnProperty('status')){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction());\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await supplierRequest.current.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200 && !response.data.hasOwnProperty('status')){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction());\n                            }else{\n                                enqueueSnackbar('Add new supplier failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            <Requests.Suppliers request={supplierRequest} />\n            <Show \n                supplier        =   {supplier}\n                modalShow       =   {modalShow}\n                user            =   {user}\n                initModalEdit   =   {initModalEdit}\n                setModalShow    =   {setModalShow}\n            />\n            <Edit\n                modalEdit       =   {modalEdit}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalEdit    =   {setModalEdit}\n                submitForm      =   {submitForm}\n            />\n            <Add\n                modalAdd        =   {modalAdd}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalAdd     =   {setModalAdd}\n                submitForm      =   {submitForm}\n            />\n            <Upload\n                open      = {upload}\n                setOpen   = {setUpload}\n                type      = \"supplier\"\n            />\n\n            <Paper className=\"paper-table main-content\">\n                <div className=\"header\">\n                    <div className=\"title\">Suppliers</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" disabled={supplierState.status!==\"done\"} className={supplierState.status === \"done\" ? \"rotate pause\":\"rotate\" } onClick={()=>dispatch(supplierAction())} color=\"primary\" >\n                            <Cached />\n                        </Fab>\n                        <Fab size=\"small\" color=\"primary\" onClick={()=>{\n                                dispatch(SuppliersFilter(!supplierState.filter));\n                            }} >\n                            <FilterList />\n                        </Fab>\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table className=\"product-list\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\" align=\"center\">Supplier Code</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Name</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Address</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Contact Person</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Contact No.</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Email</TableCell>       \n                            </TableRow>\n                        </TableHead>\n                        \n                        <TableBody>\n                            <Filter />\n                            {\n                                supplierState.data ?\n                                    supplierState.data.data.data.map((key:any,id:number)=>(\n                                        <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                            <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                            <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                            <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                            <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                            <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                            <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                        </TableRow>\n                                    ))\n                                :   skeletonTable()\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <div className=\"footer\">\n                    {\n                        user.level !== 3 ?\n                            <React.Fragment>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        setUpload(true);\n                                    }}\n                                    className=\"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </React.Fragment>\n                        : null\n                    }\n                    \n                    <TablePagination\n                        rowsPerPageOptions={[10,25,50,100]}\n                        component=\"div\"\n                        colSpan={0}\n                        count={supplierState.data ? supplierState.data.data.meta.total : 10}\n                        rowsPerPage={supplierState.params.per_page}\n                        page={supplierState.data ? supplierState.params.page-1 : 0}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                        className=\"custom-pagination\"\n                    />\n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport {UsersParams,Users} from \"Redux/Actions\";\nimport {useDispatch,useSelector} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n    const user = useSelector((state:any)=>state.Users);\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    const ref:any = {\n        username        : React.useRef(null),\n        name            : React.useRef(null),\n        company         : React.useRef(null),\n        email           : React.useRef(null),\n        level           : React.useRef(null),\n        activated       : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        dispatch(UsersParams({\n            ...user.params,\n            filter : {\n                ...user.params.filter,\n                [event.target.name] : {\n                    ...user.params.filter[event.target.name],\n                    key : event.target.value,\n                }\n            }\n        }));\n    }\n\n    const setFilterControl=(event:any) =>{\n        dispatch(UsersParams({\n            ...user.params,\n            filter : {\n                ...user.params.filter,\n                [event.target.name] : {\n                    ...user.params.filter[event.target.name],\n                    filter : event.target.value,\n                }\n            }\n        }));\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        dispatch(UsersParams({\n            ...user.params,\n            per_page    : 10,\n            page        : 1,\n        }));\n\n        if(action === \"filter\"){\n            reset();\n            if(user.params.filter[control].key !== ''){\n                dispatch(Users())\n            }\n        }else{\n            if(user.params.filter[control].key !== ''){\n                dispatch(UsersParams({\n                    ...user.params,\n                    filter : {\n                        ...user.params.filter,\n                        [control] : {\n                            ...user.params.filter[control],\n                            key : '',\n                        }\n                    }\n                }));\n                dispatch(Users());\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                dispatch(UsersParams({\n                    ...user.params,\n                    filter : {\n                        ...user.params.filter,\n                        [e.target.name] : {\n                            ...user.params.filter[e.target.name],\n                            key : '',\n                        }\n                    }\n                }));\n                dispatch(Users());\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Users());\n            }\n        }\n    }\n\n\n    return(\n        user.filter ? \n            <TableRow>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"username\"\n                        value = {user.params.filter.username.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = { ref.username }\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={user.params.filter.username.filter}\n                                    onChange={setFilterControl}\n                                    name = \"username\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                                {user.params.filter.username.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")} disabled={user.params.filter.username.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\">\n                    \n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"name\"\n                        value = {user.params.filter.name.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.name}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={user.params.filter.name.filter}\n                                    onChange={setFilterControl}\n                                    name = \"name\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                                {user.params.filter.name.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")} disabled={user.params.filter.name.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"company\"\n                        value = {user.params.filter.company.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.company}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={user.params.filter.company.filter}\n                                    onChange={setFilterControl}\n                                    name = \"company\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                                {user.params.filter.company.key === '' ?'Close' : 'Clear'}                                                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")} disabled = { user.params.filter.company.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"email\"\n                        value = {user.params.filter.email.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.email}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={user.params.filter.email.filter}\n                                    onChange={setFilterControl}\n                                    name = \"email\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                                {user.params.filter.email.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={user.params.filter.email.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        value={user.params.filter.level.key}\n                        onChange={setText}\n                        name=\"level\"\n                        variant=\"outlined\"\n                        select\n                        className=\"input\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        <MenuItem value={3}>Viewer</MenuItem>\n                    </TextField>\n                    <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                        <Paper className=\"popper-paper\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,level:null})}>\n                                Close\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\">\n                        <TextField\n                            value={user.params.filter.activated.key}\n                            onChange={setText}\n                            name=\"activated\"\n                            onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                            select\n                            className=\"input\"\n                            variant=\"outlined\"\n                        >\n                            <MenuItem value={0} >All</MenuItem>\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={2}>No</MenuItem>\n                            \n                        </TextField>\n                    <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                        <Paper className=\"popper-paper\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,activated:null})}>\n                                Close\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n            \n            </TableRow>\n        : null\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface show{\n    users : any,\n    initModalEdit:any,\n    modalShow : boolean,\n    \n    setModalShow: any,\n}\n\nconst Show = (props:show) => {\n\n    return(\n        props.modalShow ?\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog show\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper>\n                            <Table>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Username</TableCell>\n                                        <TableCell>{props.users.username}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>{props.users.first_name+\" \"+props.users.last_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Company</TableCell>\n                                        <TableCell>{props.users.company}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                        <TableCell align=\"left\" >{props.users.email}</TableCell>\n                                    </TableRow>\n                                    {/* <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                        <TableCell align=\"left\"></TableCell>\n                                    </TableRow> */}\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                        <TableCell align=\"left\">{props.users.level === 1 ? 'Admin' : props.users.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                        <TableCell align=\"left\">{props.users.activated? 'Yes' : 'No'}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={props.initModalEdit} \n                        color=\"primary\" \n                        variant=\"contained\"\n                    >  \n                        <Edit />\n                        Edit\n                    </Button>\n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        : null\n    );\n}\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\nimport Select from 'react-select';\n\ninterface Edit{\n    modalEdit : any,\n    usersInput : any,\n    responseMessage : any,\n    submit : boolean,\n\n\n    updateInput : any,\n    submitForm(a:any,b:any) : void,\n    setModalEdit(a:boolean) : void,\n}\n\nconst Edit = (props:Edit) => {\n\n    let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n    let activated = [\n        {label:'Yes', value : 1,target:{name:'activated',value:1}},\n        {label:'No', value : 0,target:{name:'activated',value:0}},\n    ]\n\n    return(\n        props.modalEdit ? \n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalEdit}\n                onClose={ () =>props.setModalEdit(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog edit\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                <DialogContent style={{overflow:'visible'}}>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Username\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"username\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.username}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.username.error}\n                                            helperText = {props.responseMessage.username.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        First Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"first_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.first_name}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.first_name.error}\n                                            helperText = {props.responseMessage.first_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Last Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"last_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.last_name}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.last_name.error}\n                                            helperText = {props.responseMessage.last_name.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Company\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"company\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.company}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.company.error}\n                                            helperText = {props.responseMessage.company.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Level\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={level}\n                                            // isClearable\n                                            name = 'level'\n                                            defaultValue = {level.find((element:any) => element.value === props.usersInput.level)}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Activated\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={activated}\n                                            // isClearable\n                                            name = 'activated'\n                                            defaultValue = {activated.find((element:any) => \n                                                element.value === props.usersInput.activated\n                                            )}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"email\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.email}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.email.error}\n                                            helperText = {props.responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.password.error}\n                                            helperText = {props.responseMessage.password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Confirm Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"confirm_password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.confirm_password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.confirm_password.error}\n                                            helperText = {props.responseMessage.confirm_password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => props.submitForm(event,\"edit\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={props.submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        : null\n    );\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\nimport Select from 'react-select';\n\ninterface Add{\n    modalAdd : any,\n    usersInput : any,\n    responseMessage : any,\n    submit : boolean,\n\n\n    updateInput : any,\n    submitForm(a:any,b:any) : void,\n    setModalAdd(a:boolean) : void,\n}\n\nconst Add = (props:Add) => {\n\n    let level = [\n        {label:'Admin', value : 1,target:{name:'level',value:1}},\n        {label:'Encoder', value : 2,target:{name:'level',value:2}},\n        {label:'Viewer', value : 3,target:{name:'level',value:3}},\n    ];\n\n\n\n    let activated = [\n        {label:'Yes', value : 1,target:{name:'activated',value:1}},\n        {label:'No', value : 0,target:{name:'activated',value:0}},\n    ]\n\n    return(\n        props.modalAdd ? \n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalAdd}\n                onClose={ () =>props.setModalAdd(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog edit\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add User Details</DialogTitle>\n                <DialogContent style={{overflow:'visible'}}>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Username\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"username\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.username}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.username.error}\n                                            helperText = {props.responseMessage.username.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        First Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"first_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.first_name}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.first_name.error}\n                                            helperText = {props.responseMessage.first_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Last Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"last_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.last_name}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.last_name.error}\n                                            helperText = {props.responseMessage.last_name.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Company\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"company\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.company}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.company.error}\n                                            helperText = {props.responseMessage.company.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Activated\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={activated}\n                                            // isClearable\n                                            name = 'activated'\n                                            defaultValue = {activated[0]}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Level\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={level}\n                                            // isClearable\n                                            name = 'level'\n                                            defaultValue = {level[0]}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"email\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.email}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.email.error}\n                                            helperText = {props.responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.password.error}\n                                            helperText = {props.responseMessage.password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Confirm Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"confirm_password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.confirm_password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.confirm_password.error}\n                                            helperText = {props.responseMessage.confirm_password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => props.submitForm(event,\"add\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={props.submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        : null\n    );\n}\n\nexport default Add;","import React from 'react';\nimport { NavigationTitle,Users as user,Filter as Filterer,UsersFilter, UsersParams } from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, TablePagination, Fab} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Close, FilterList, Cached } from '@material-ui/icons';\nimport Filter from './Filter';\nimport Show from './Show';\nimport Edit from './Edit';\nimport Add from './Add';\n\nconst Users = (props:any) =>{\n\n    const userRequest:any = React.useRef();\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : 1,\n        level               : 1,\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState(null);\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users );\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({control:'users'}));\n\n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[props]);\n\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        dispatch(UsersParams({\n            ...usersState.params,\n            page : newPage+1,\n        }));\n        dispatch(user());\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(UsersParams({\n            ...usersState.params,\n            page : 1,\n            per_page : event.target.value,\n        }));\n        dispatch(user());\n    };\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={'100%'} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await userRequest.current.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200 && !response.data.hasOwnProperty('status') ){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user());\n                            }else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await userRequest.current.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200 && !response.data.hasOwnProperty('status')){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user());\n                            }else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n    \n    return(\n        <React.Fragment>\n            <Requests.User request={userRequest} />\n            <Show users = {users} initModalEdit = {initModalEdit} modalShow = {modalShow} setModalShow = {setModalShow} />\n            <Edit \n                modalEdit = {modalEdit}\n                usersInput = {usersInput}\n                responseMessage = {responseMessage}\n                submit = {submit}\n                updateInput = {updateInput}\n                submitForm = {submitForm}\n                setModalEdit = {setModalEdit}\n            />\n            <Add \n                modalAdd = {modalAdd}\n                usersInput = {usersInput}\n                responseMessage = {responseMessage}\n                submit = {submit}\n                updateInput = {updateInput}\n                submitForm = {submitForm}\n                setModalAdd = {setModalAdd}\n            />\n            <Paper className=\"paper-table main-content\">\n                <div className=\"header\">\n                    <div className=\"title\">Users</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" disabled={usersState.status!==\"done\"} className={usersState.status === \"done\" ? \"rotate pause\":\"rotate\" } onClick={()=>dispatch(user())} color=\"primary\" >\n                            <Cached />\n                        </Fab>\n                        <Fab size=\"small\" color=\"primary\" onClick={()=>{\n                                dispatch(UsersFilter(!usersState.filter));\n                            }} >\n                            <FilterList />\n                        </Fab>\n                        {/* <Fab size=\"small\" color=\"primary\" onClick={(event:any)=>{\n                            setTableAnchor(event.currentTarget);\n                            setTableOpen(!tableOpen);\n                        }}>\n                            <ViewColumn />\n                        </Fab> */}\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Username</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Name</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Company</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Email</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Level</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Activated</TableCell>       \n                            </TableRow>\n                        </TableHead>\n                        \n                        <TableBody>\n                            <Filter />\n                            {\n                                usersState.data ?\n                                    usersState.data.data.data.map((key:any,id:number)=>(\n                                        <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                            <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                            <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                            <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                            <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                            <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}>{key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                            <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                        </TableRow>\n                                    ))\n                                :   skeletonTable()\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <div className=\"footer\">\n                    <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                        ADD NEW\n                    </Button>\n                    <TablePagination\n                        rowsPerPageOptions={[10,25,50,100]}\n                        colSpan={0}\n                        component=\"div\"\n                        count={usersState.data ? usersState.data.data.meta.total : 10}\n                        rowsPerPage={usersState.params.per_page}\n                        page={usersState.data ? usersState.params.page-1 : 0}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                        className=\"custom-pagination\"\n                    />\n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React from 'react';\nimport \"./style.scss\";\n\nconst NotFound = () => {\n    return (\n        <div id=\"notfound\">\n\t\t    <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h1>:(</h1>\n                </div>\n                <h2>404 - Page not found</h2>\n                <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\n                <a href=\"/\">home page</a>\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\nimport './summaryStyle.scss';\n\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n    input : any,\n    setInput : any,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-8px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            fontSize : '13px', \n        },\n        category : {\n            width : '100%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none'\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute', \n        }\n    }),\n);\n\n\nconst Edit = (props:Add) => {\n    const masterCodesRequest:any = React.useRef();\n    const categoryRequest:any = React.useRef();\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    // const [input, setInput] = React.useState({\n    //     product_code : '',\n    //     product_name : '',\n    //     category     : '',\n    // });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState({\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    });\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n    const [categoryValue,setCategoryValue] = React.useState('');\n    const [categoryPreValue,setCategoryPreValue] = React.useState(null);\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            loadPreValues();\n        }\n    },[props]);\n\n\n    const loadPreValues = async () => {\n\n        let product = await categoryRequest.current.get(props.input.category);\n\n\n        setCategoryPreValue({\n            value : product.data.data.id,\n            label : product.data.data.name,\n            target : {\n                value : product.data.data.id,\n                name  : \"category\"\n            }\n        });\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const handleChangeText = (event:any) => {\n        props.setInput({\n            ...props.input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    const loadOption = async(inputValue:string) => {\n        let category =  await categoryRequest.current.show({search:inputValue});\n\n        return category.data.data.map((value:any)=>{\n            return{\n                value : value.id,\n                label : value.name,\n                target:{\n                    value : value.id,\n                    name : \"category\",\n                }\n            }\n        });\n    }\n    \n    const submitForm = async (event:any) => {\n              \n        setError({\n            product_code : {error: false, message : ''},\n            product_name : {error: false, message : ''},\n            category : {error: false, message : ''}\n        }); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await masterCodesRequest.current.update(props.input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200 && !a.data.hasOwnProperty('status')){\n                enqueueSnackbar(\"Successfully Updated Product Code\",{variant:\"success\",action:actions});\n\n                // let a = await masterCodesRequest.current.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes());\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 200 && a.data.hasOwnProperty('status')){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Update product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = error;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    return (\n        props.open ?\n        <React.Fragment>\n            <Requests.Category request={categoryRequest} />\n            <Requests.MasterCodes request={masterCodesRequest} />\n            \n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n                value = {categoryValue}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Edit Product Code</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {props.input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {props.input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div className={ error.category.error ? \"summary-select-wrapper has-error\" : \"summary-select-wrapper\"} >\n                            <label >Category</label> \n                            <AsyncCreatableSelect\n                                cacheOptions\n                                defaultOptions\n                                onChange = {handleChangeText}\n                                loadOptions ={(value) =>loadOption(value)}\n                                onCreateOption = {(inputValue)=>{\n                                    setCategoryValue(inputValue);\n                                    setCategoryHandler(true);\n                                }}\n                                className=\"summary-select-main\"\n                                value={categoryPreValue}\n                                required\n                                isDisabled={submit}\n                                classNamePrefix=\"summary-select\"\n                                maxMenuHeight={170}\n                            />\n                            <div hidden={!error.category.error} className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n                        <button type=\"submit\" hidden />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n\n        : null\n      );\n}\n\nexport default Edit;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {NavigationTitle,MasterCodeParams,Filter as Filterer,MasterCodes} from 'Redux/Actions';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, CircularProgress, DialogContent, Fab } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Add from './Add';\nimport Edit from './Edit';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from '../../../Services';\nimport { Close, CloudUpload, Cached } from '@material-ui/icons';\nimport Upload from 'Components/Upload';\n\n\n\nconst Summary = (props:any) => {\n\n    const dispatch = useDispatch();\n    const masterCode = useSelector( (state:any) => state.MasterCodes );\n    const masterCodesRequest:any = React.useRef();\n    const [upload,setUpload] = React.useState(false);\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar    \n    // const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        product_code     : {filter:'iet',key:''},\n        product_name     : {filter:'iet',key:''},\n        category         : {filter:'iet',key:''},\n    });\n    const [ open, setOpen ] = React.useState(false);\n    \n    React.useEffect(()=>{\n        dispatch(NavigationTitle({control:\"product_master_file_maintenance\"}));\n\n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[]);\n\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n\n\n\n    let file:HTMLInputElement;\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    // const uploadFile = () => {\n    //     togglePointerEvents(false);\n    //     if(file.files.length !== 0){\n    //         const selectedFile = file.files[0];\n    //         let filename = selectedFile.name.split('.').pop();\n            \n    //         if( !(filename === 'xls' || filename === 'xlsx')) {\n    //             enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n    //             return;\n    //         }else{\n    //             // uploadSheet(selectedFile);\n    //         }\n    //     }\n    // }\n\n\n    // const uploadFileModal = () =>{\n    //     if(upload.uploading){\n    //         return (\n    //             <Dialog\n    //                 maxWidth=\"xs\"\n    //                 open={upload.uploading}\n    //                 disableBackdropClick\n    //                 className=\"uploading-processing\"\n    //             >\n    //                 <DialogContent>\n    //                     <div>\n    //                         <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n    //                             <CircularProgress />\n    //                         </div>\n    //                         <div className=\"status-submit-upload\">\n    //                             Uploading\n    //                         </div>\n    //                     </div>\n    //                 </DialogContent>\n    //             </Dialog>\n    //         );\n    //     }else{\n    //         return null;\n    //     }\n    // }\n\n\n    /**********************/\n\n\n\n\n    //************** for edit\n\n    const [input, setInput] = React.useState({\n        id           : '',\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [openEdit, setOpenEdit] = React.useState(false);\n\n    const handleEdit = () => {\n        setOpenEdit(!openEdit)\n    }\n\n    const handleAdd = () => {\n        setOpen(!open);\n    }\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = masterCode.params;\n        pams.page=newPage+1;\n        console.log(pams);\n        dispatch(MasterCodeParams(pams));\n        dispatch(Filterer(filter,\"master\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n        dispatch(MasterCodeParams(paran));\n        dispatch(Filterer(filter,\"master\",paran));\n    };\n\n    const initEdit = (a:any) => {\n\n        setInput({\n            id : a.id,\n            product_code : a.product_code,\n            product_name : a.product_name,\n            category : a.category.id\n        });\n        setOpenEdit(true);\n    }\n\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"center\"><Skeleton variant=\"rect\" width={'100%'} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n    \n    return(\n        <React.Fragment>\n            <Requests.MasterCodes request={masterCodesRequest} />\n            <Add open={open} handleClose={handleAdd}/>\n            <Edit open={openEdit} handleClose={handleEdit} input = {input} setInput = {setInput}/>\n           \n            <Upload\n                open      = {upload}\n                setOpen   = {setUpload}\n                type      = \"masterfile\"\n            />\n            \n            \n            <Paper className=\"paper-table main-content\">\n                <div className=\"header\">\n                    <div className=\"title\">Product Maintenance</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" disabled={masterCode.status!==\"done\"} className={masterCode.status === \"done\" ? \"rotate pause\":\"rotate\" } onClick={()=>dispatch(MasterCodes())} color=\"primary\" >\n                            <Cached />\n                        </Fab>\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\" align=\"left\">Product Code</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"left\">Product Name</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"left\">Category</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        \n                        <TableBody>\n                            {\n                                masterCode.data ?\n                                    masterCode.data.data.data.map((key:any,id:number)=>(\n                                        <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initEdit(key)} >\n                                            <TableCell align=\"left\" title={key.product_code}>{key.product_code}</TableCell>\n                                            <TableCell align=\"left\" title={key.product_name}>{key.product_name}</TableCell>\n                                            <TableCell align=\"left\" title={key.category}>{key.category.name}</TableCell>\n                                        </TableRow>\n                                    ))\n                                :   \n                                skeletonTable()\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <div className=\"footer\">\n                    <Button onClick={ () => handleAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                        ADD NEW\n                    </Button>\n                    \n    \n                    <Button \n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={(event)=>{\n                            setUpload(true);\n                        }}\n                        className = \"product-add-file\"\n                    >\n                        <CloudUpload />&nbsp;  \n                        Import file\n                    </Button>\n\n                    <TablePagination\n                        rowsPerPageOptions={[10,25,50,100]}\n                        colSpan={0}\n                        component=\"div\"\n                        count={masterCode.data ? masterCode.data.data.meta.total : 10}\n                        rowsPerPage={masterCode.params.per_page}\n                        page={masterCode.data ? masterCode.params.page-1 : 0}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                        className=\"custom-pagination\"\n                    />\n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n\n}\n\nexport default Summary;","import React from 'react';\nimport { CircularProgress,Grid } from '@material-ui/core';\nimport \"./sync.scss\";\n\nconst Sync = () => {\n\n    const me:any = React.useRef();\n    const product:any = React.useRef();\n    const supplier:any = React.useRef();\n    const users:any = React.useRef();\n    const masterCodes:any = React.useRef();\n    const reports:any = React.useRef();\n    const log:any = React.useRef();\n    \n    const [finish,setFinish] = React.useState(false);\n    const [message,setMessage] = React.useState('Loading...');\n    \n    const callerList:any={\n        me          :   {name: \"me\",           funct : me},\n        product     :   {name: \"product\",      funct : product},\n        supplier    :   {name: \"supplier\",     funct : supplier},\n        users       :   {name: \"users\",        funct : users},\n        masterCodes :   {name: \"masterCodes\",  funct : masterCodes},\n        reports     :   {name: \"reports\",      funct : reports},\n        log         :   {name: \"log\",          funct : log},\n    };\n\n    return (\n        <Grid\n            container\n            spacing={0}\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: \"100vh\" }}\n        >\n            <Grid className=\"text-center\" item xs={6}>\n                <CircularProgress size={60} /> <br />\n                <div>&nbsp;{message}</div>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default Sync;","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch,useSelector } from 'react-redux'; // for connecting redux;\nimport {loggedIn } from 'Redux/Actions';\nimport Sync from 'Components/Sync';\n\nconst ComponentMiddleware =(props:any) =>{\n\n\n    const userRequest:any = React.useRef();\n    const [ finish, setFinish ] = React.useState(false);\n    const user = useSelector((state:any) => state.UserAccount.data);\n    const log = useSelector((state:any) => state.status);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        check();\n    },[user]);\n\n\n\n    const check = () => {\n        if(!log.loggedIn && Token.exist()){\n            dispatch(loggedIn(true));\n        }\n    }\n\n\n    if(!log.caller && Token.exist()){\n        return <Sync />;\n    }\n\n    if(Token.exist()){\n        return <props.component {...props}  />;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    if(Token.exist()){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import * as Component from 'Components';\nimport {ComponentMiddleware,LoginMiddleware} from 'Middleware';\n\nexport const Navigation = [\n    {\n        path        : \"/\",\n        component   : Component.Home,\n        middleware  : ComponentMiddleware,\n        exact       : true,\n    },{\n        path        : \"/login\",\n        component   : Component.Login,\n        middleware  : LoginMiddleware,\n        exact       : false,\n    },{\n        path        : \"/products\",\n        component   : Component.Products,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : \"/suppliers\",\n        component   : Component.Suppliers,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : \"/users\",\n        component   : Component.Users,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : \"/reports\",\n        component   : Component.Reports,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : '/settings',\n        component   : Component.Settings,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : '/summary',\n        component   : Component.Summary,\n        middleware  : ComponentMiddleware,\n        exact       : false,\n    }\n];\n","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport {error as errorAction} from 'Redux/Actions'\nimport {useSnackbar} from 'notistack';\n\nconst Error = (props:any):any => {\n\n    const dispatch = useDispatch();\n    const error = useSelector((state:any)=>state.status.error);\n    // const loggedIn = useSelector((state:any)=>state.status.loggedIn);\n    const {enqueueSnackbar,closeSnackbar} = useSnackbar();\n\n    const action = (key:any) => (\n        <Button variant=\"text\" color=\"inherit\" onClick={ () => closeSnackbar(key)}>\n            <Close />\n        </Button>\n    );\n\n    React.useEffect(()=>{\n\n        if(error){\n            enqueueSnackbar('Something went wrong, please try again later!!!',{\n                variant:\"error\",\n                anchorOrigin:{\n                    vertical:'top', \n                    horizontal:'right'\n                },\n                action : action\n            });\n            \n            dispatch(errorAction(false));\n        }\n\n    },[error]);\n\n    return null;\n\n}\n\nexport default Error;","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\n// import {Products,Suppliers,Users,MasterCodes,Activities,Notifications,UserAccount,ProductsGraph,Logs} from 'Redux/Actions';\nimport Token from './Token';\nimport { request } from 'Services/Requests/StaticMethods';\nimport { \n    UserAccount as UAType,\n    Products    as PType,\n    Suppliers   as SType,\n    Users       as UType,\n    MasterCodes as MCType,\n    Logs        as LType,\n    Notifications as NType,\n    status \n} from 'Redux/Actions/Types';\nimport Url from './ServerUrl';\n\n\nconst Caller = ():any => {\n\n    const dispatch = useDispatch();\n    const state = useSelector((state:any)=>state);\n    const [ids,setIds] = React.useState(null);\n\n    let list:any = {\n        me      : {type:UAType,params:{url: Url.me,method  : 'GET'}},\n        graph   : {type:status.graph,params:{url: Url.status,method  : 'GET',}},\n        products: {type:PType.data,params:{url:Url.products,method:\"GET\",params:state.Products.params}},\n        suppliers:{type:SType.data,params:{url: Url.suppliers,method  : 'GET',params    : state.Suppliers.params,}},\n        users   : {type:UType.data,params:{url:Url.user,method:\"GET\",params:state.Users.params}},\n        masterCodes : {type:MCType.data,params:{url:Url.productMasterList,method:\"GET\",params:state.MasterCodes.params}},\n        logs    : {type:LType.data,params:{url:Url.logs,method:\"GET\",params:state.Logs.params}},\n        notification : {type:NType.data,params:{url:Url.notification,method:\"GET\",params:state.Notifications.params}},\n    }\n\n    \n\n    React.useEffect(()=>{\n        caller();\n        // console.log(ids,state.status.loggedIn,Token.exist());\n    },[state.status.loggedIn]);\n\n\n    const caller = async() => {\n        if(state.status.loggedIn && Token.exist()){\n            if(ids === null){\n                let a = await actionCaller();\n                if(a){\n                    dispatch({type:status.caller,payload:true})\n                    let b = setInterval(actionCaller,300000);\n                    setIds(b);\n                }\n            }\n        }else{\n            clearInterval(ids);\n            setIds(null);\n        }\n    }\n\n    const actionCaller = async() =>{\n        for(var i = 0;i < Object.keys(list).length;i++){\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({type    : status.loggedIn,payload : false,});\n                return false;\n            }\n            let name =  Object.keys(list)[i];\n\n            let a = await request(list[name].params);\n            if (a.status === 200){\n                if(name===\"me\"){\n                    dispatch({type:list[name].type,payload:a.data})\n                    if(a.data.level === 3){\n                        delete list['users'];\n                        delete list['notification'];\n                    }\n                    if(a.data.level === 2){\n                        delete list['users'];\n                    }\n                }else{\n                    dispatch({type:list[name].type,payload:a})\n                }\n            }\n            if(a.status === 401){\n                dispatch({type    : status.loggedIn,payload : false,});\n                clearInterval(ids);\n                return false;\n            }else{\n                dispatch({type    : status.error,payload : true,});\n            }\n        }\n        return true;\n    }\n\n    return null;\n}\n\nexport default Caller;","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {Navigation} from './Navigation';\nimport { useSelector } from 'react-redux';\nimport Error from './Error';\nimport Caller from 'Services/Caller';\n\nconst Navigations = (props:any) =>{\n\n    const status = useSelector((state:any)=>state.status);\n\n    return(\n        <React.Fragment>\n            {/* <div className=\"container-body\"> */}\n                <div className=\"container\">\n                    <Caller />\n                    <BrowserRouter> \n                        {status.loggedIn && status.caller ? <Component.Navigation />: ''}\n                        <Switch>\n                            {\n                                Navigation.map((element,index) => \n                                    <Route \n                                        exact={element.exact} \n                                        path ={element.path} \n                                        render= {(props) => <element.middleware {...props} component={element.component} />} \n                                        key={index}\n                                    />\n                                )\n                            }\n                            <Route component={Component.NotFound} />\n                            <Error {...props} />\n                        </Switch>\n                    </BrowserRouter>\n                </div>\n            {/* </div> */}\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT} from '../Actions/Types';\n\nconst initialState = {\n\ttitle \t: '',\n\tcontrol : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttitle : action.payload.title,\n\t\t\t\tcontrol : action.payload.control,\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\n\ntype asc = null | boolean;\ntype status = \"pending\" | \"done\";\n\n\n\nlet ascVal:asc = null;\nlet stat:status = \"done\";\n\n\nconst initialState = {\n\tdata \t: '',\n\ttable\t: {\n\t\tsupplier_code\t: {name : 'Supplier Code',\t\tshow : true, asc : ascVal},\n\t\tsupplier_name\t: {name : 'Supplier Name',\t\tshow : true, asc : ascVal},\n\t\tproduct_code\t: {name : 'Product Code',\t\tshow : true, asc: ascVal},\n\t\tproduct_name\t: {name : 'Product Name',\t\tshow : true,asc:ascVal},\n\t\tcategory\t\t: {name : 'Category',\t\t\tshow : true,asc:ascVal},\n\t\tserial\t\t\t: {name : 'Serial Number',\t\tshow : true,asc:ascVal},\n\t\twarranty\t\t: {name : 'Warranty',\t\t\tshow : false,asc:ascVal},\n\t\twarranty_start\t: {name : 'Warranty Start',\t\tshow : false,asc:ascVal},\n\t\twarranty_end\t: {name : 'Warranty End',\t\tshow : false,asc:ascVal},\n\t\tstatus\t\t\t: {name : 'Status',\t\t\t\tshow : false,asc:ascVal},\n\t\tdelivery_date\t: {name : 'Delivery Date',\t\tshow : false,asc:ascVal},\n\t\treference_delivery_document\t: {name : 'Delivery Document',\tshow : false,asc:ascVal},\n\t\tcreated_by\t\t: {name : 'Created By',\t\t\tshow : false,asc:ascVal},\n\t\tremarks \t\t: {name : 'Remarks',\t\t\tshow : false,asc:ascVal}\n\t},\n\tfilter : false,\n\tstatus : stat,\n\tparams : {\n\t\tpage : 1,\n\t\tper_page : 10,\n\t\tfilter : {\n\t\t\tsupplier            : {filter:'iet',key:''},\n\t\t\tproduct             : {filter:'iet',key:''},\n\t\t\tproduct_description : {filter:'iet',key:''},\n\t\t\tsupplier_name       : {filter:'iet',key:''},\n\t\t\tcategory            : {filter:'iet',key:''},\n\t\t\tserial_number       : {filter:'iet',key:''},\n\t\t\twarranty            : {filter:'iet',key:''},\n\t\t\twarranty_start      : {filter:'iet',key:''},\n\t\t\twarranty_end        : {filter:'iet',key:''},\n\t\t\tstatus              : {filter:'iet',key:''},\n\t\t\tdelivery_date       : {filter:'iet',key:''},\n\t\t\treference_delivery_document : {filter:'iet',key:''},\n\t\t\tcreated_by          : {filter:'iet',key:''},\n\t\t\tremarks             : {filter:'iet',key:''},\n\t\t}\n\t}\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr.data:\n      \t\treturn {\n\t\t\t\t...state,\n        \t\tdata : action.payload,\n\t\t\t}\n\t\tcase pr.table:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttable : action.payload,\n\t\t\t}\n\t\tcase pr.filter:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tfilter : action.payload\n\t\t\t}\n\t\tcase pr.params:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tparams : action.payload\n\t\t\t}\n\t\tcase pr.status:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tstatus : action.payload\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n\tdata : '',\n\ttable: {\n\t\tsupplier_code\t: {name : 'Supplier Code',show:false},\n\t\tsupplier_name\t: {name : 'Name',show:false},\n\t\taddress\t\t\t: {name : 'Address',show:false},\n\t\tcontact_person \t: {name : 'Contact Person',show:false},\n\t\tcontact_number\t: {name : 'Contact Number',show:false},\n\t\temail\t\t\t: {name : 'Email',show:false}\n\t},\n\tfilter : false,\n\tstatus : \"done\",\n\tparams : {\n\t\tpage : 1,\n\t\tper_page : 10,\n\t\tfilter : {\n\t\t\tsupplier_code       : {filter:'iet',key:''},\n\t\t\tsupplier_name       : {filter:'iet',key:''},\n\t\t\taddress             : {filter:'iet',key:''},\n\t\t\tcontact_person      : {filter:'iet',key:''},\n\t\t\tcontact_number      : {filter:'iet',key:''},\n\t\t\temail               : {filter:'iet',key:''},\n\t\t},\n\t}\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp.data:\n      \t\treturn {\n\t\t\t\t...state,\n        \t\tdata :  action.payload,\n\t\t\t}\n\t\tcase sp.filter:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilter : action.payload,\n\t\t\t}\n\t\tcase sp.table: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttable : action.payload,\n\t\t\t}\n\t\tcase sp.params:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tparams : action.payload,\n\t\t\t}\n\t\tcase sp.status :\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tstatus : action.payload,\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n\tdata : '',\n\tfilter : false,\n\tparams : {\n\t\tpage : 1,\n\t\tper_page : 10,\n\t\tfilter : {\n\t\t\tusername        : {filter:'iet',key:''},\n\t\t\tname            : {filter:'iet',key:''},\n\t\t\tcompany         : {filter:'iet',key:''},\n\t\t\temail           : {filter:'iet',key:''},\n\t\t\tlevel           : {filter:'iet',key:0},\n\t\t\tactivated       : {filter:'iet',key:0},\n\t\t},\n\t},\n\tstatus : \"done\",\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users.data:\n\t\t\treturn {\n\t\t\t\t...state,\n        \t\tdata : action.payload,\n\t\t\t}\n\t\tcase users.filter:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilter : action.payload\n\t\t\t}\n\t\tcase users.params:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tparams : action.payload\n\t\t\t}\n\t\tcase users.status:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tstatus : action.payload\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { MasterCodes as MC } from '../Actions/Types';\n\nconst initialState = {\n\tdata \t: \"\",\n\tparams\t: {\n\t\tpage : 1,\n\t\tper_page : 10,\n\t\tfilter : \"\",\n\t},\n\tstatus \t: \"done\"\n};\n\nconst MasterCodes = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase MC.data:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata : action.payload\n\t\t\t}\n\t\tcase MC.params:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tparams : action.payload\n\t\t\t}\n\t\tcase MC.status:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tstatus : action.payload\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default MasterCodes;","import { Category as ct } from '../Actions/Types';\n\nconst initialState:any = [];\n\nconst Category = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase ct:\n      \t\treturn action.payload;\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Category;","import { status as stat} from '../Actions/Types';\n\nconst initialState = {\n\tloggedIn    : false,\n\terror       : false,\n\tcaller\t\t: false,\n\tgraph \t\t: {}\n};\n\nconst status = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase stat.loggedIn:\n      \t\treturn {\n\t\t\t\t...state,\n                loggedIn : action.payload\n            }\n        case stat.error:\n            return {\n                ...state,\n                error : action.payload\n\t\t\t}\n\t\tcase stat.caller:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcaller : action.payload\n\t\t\t}\n\t\tcase stat.graph : \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgraph : action.payload\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default status;","import { Notifications as AC } from '../Actions/Types';\n\nconst initialState = {\n\tdata \t: \"\",\n\tparams\t: {\n\t\tpage : 1,\n\t\tper_page : 10,\n\t\tfilter : \"\",\n\t},\n\tstatus \t: \"done\"\n};\n\nconst Notifications = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase AC.data:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata : action.payload\n\t\t\t}\n\t\tcase AC.params:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tparams : action.payload\n\t\t\t}\n\t\tcase AC.status:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tstatus : action.payload\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Notifications;","import { Logs as log } from '../Actions/Types';\n\n\nconst initialState = {\n\tdata \t: '',\n\tparams : {\n\t\tpage : 1,\n\t\tper_page : 10,\n\t\tfilter : '',\n\t},\n\tstatus\t: \"done\",\n};\n\nconst Logs = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase log.data:\n      \t\treturn {\n\t\t\t\t...state,\n        \t\tdata : action.payload,\n\t\t\t}\n\t\tcase log.params:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tparams : action.payload,\n\t\t\t}\n\t\tcase log.status:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tstatus : action.payload,\n\t\t\t}\n\t\t\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Logs;\n","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\nimport MasterCodes from './MasterCodes';\nimport Category from './Category';\nimport status from './status';\nimport { Token } from 'Services';\nimport {status as stat} from '../Actions/Types';\nimport Notifications from './Notifications';\nimport Logs from './Logs';\n\n\nconst appReducer =  combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search,\n    MasterCodes,\n    Category,\n    status,\n    Notifications,\n    Logs,\n});\n\nconst rootReducer = (state:any,action:any) => {\n\n\tif(action.type === stat.loggedIn && action.payload === false){\n        Token.remove();\n\t\tstate = {};\n\t}\n\n\treturn appReducer(state,action);\n}\n\nexport default rootReducer;","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst a = (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  a ? \n    compose(\n      applyMiddleware(...middleware),a\n    )\n    :\n    compose(\n      applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport './App.scss';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Navigations />\n                </MuiPickersUtilsProvider>\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}